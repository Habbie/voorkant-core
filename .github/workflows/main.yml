name: Build

on:
  push:
  pull_request:
  schedule:
    # Weekly build (on saturday)
    - cron: '0 0 * * 6'

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: start HA in the background
      run: scripts/tmux.sh
    - name: Update apt indexes
      run: sudo apt-get update
    - name: Install various apt dependencies
      run: sudo apt-get install build-essential cmake ninja-build nlohmann-json3-dev pkg-config libssl-dev libsdl2-dev python3-pip
    - name: Install meson
      run: pip install meson
    - name: Configure Meson
      run: meson setup ${{github.workspace}}/build 
    - name: Build
      run: meson compile -C ${{github.workspace}}/build
    - name: Check for token
      run: cat scripts/docker/longtoken.txt
    - uses: actions/upload-artifact@v4
      with:
        name: ubuntu-build
        path: ${{github.workspace}}/build
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install dependencies (brew)
        run: brew install gcc meson nlohmann-json sdl2 curl
      - name: Meson setup
        run: PKG_CONFIG_PATH="/usr/local/opt/curl/lib/pkgconfig" meson setup ${{github.workspace}}/build
        env:
          CC: gcc
      - run: meson compile -C ${{github.workspace}}/build -v
      - uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: ${{github.workspace}}/build
  clang-format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Update apt indexes
      run: sudo apt-get update
    - name: Install various apt dependencies
      run: sudo apt-get install build-essential cmake ninja-build nlohmann-json3-dev pkg-config libssl-dev libsdl2-dev
    - name: Install meson
      run: pip install meson
    - name: Configure Meson
      run: meson setup ${{github.workspace}}/build
    - name: Format
      run: ninja -C ${{github.workspace}}/build clang-format
    - name: Check for formatting disagreements
      run: git diff --exit-code
