--- lv_drv_conf_template.h	2023-12-29 21:23:30.004595572 +0100
+++ ../../src/lv_drv_conf.h	2024-06-08 22:55:04.758890420 +0200
@@ -1,6 +1,6 @@
 /**
  * @file lv_drv_conf.h
- * Configuration file for v8.3.0
+ * Configuration file for v9.0.0-dev
  */
 
 /*
@@ -8,7 +8,7 @@
  */
 
 /* clang-format off */
-#if 0 /*Set it to "1" to enable the content*/
+#if 1 /*Set it to "1" to enable the content*/
 
 #ifndef LV_DRV_CONF_H
 #define LV_DRV_CONF_H
@@ -85,8 +85,10 @@
  *-------------------*/
 
 /* SDL based drivers for display, mouse, mousewheel and keyboard*/
+#if defined(VOORKANT_LVGL_SDL)
 #ifndef USE_SDL
-# define USE_SDL 0
+# define USE_SDL 1
+#endif
 #endif
 
 /* Hardware accelerated SDL driver */
@@ -95,8 +97,8 @@
 #endif
 
 #if USE_SDL || USE_SDL_GPU
-#  define SDL_HOR_RES     480
-#  define SDL_VER_RES     320
+#  define SDL_HOR_RES     800
+#  define SDL_VER_RES     480
 
 /* Scale window by this factor (useful when simulating small screens) */
 #  define SDL_ZOOM        1
@@ -106,10 +108,13 @@
 #  define SDL_DOUBLE_BUFFERED 0
 
 /*Eclipse: <SDL2/SDL.h>    Visual Studio: <SDL.h>*/
-#  define SDL_INCLUDE_PATH    <SDL2/SDL.h>
+#  define SDL_INCLUDE_PATH    <SDL2/SDL.h> //NOLINT(bugprone-macro-parentheses)
 
 /*Open two windows to test multi display support*/
 #  define SDL_DUAL_DISPLAY            0
+
+/* Window Title  */
+#  define SDL_WINDOW_TITLE "TFT Simulator"
 #endif
 
 /*-------------------
@@ -192,6 +197,13 @@
 #  endif
 #endif
 
+/*----------------------------------------
+ *  X11 drivers (monitor, mouse, keyboard)
+ *---------------------------------------*/
+#ifndef USE_X11
+#  define USE_X11       0
+#endif
+
 /*----------------
  *    SSD1963
  *--------------*/
@@ -315,8 +327,10 @@
 /*-----------------------------------------
  *  Linux frame buffer device (/dev/fbx)
  *-----------------------------------------*/
+#if defined(VOORKANT_LVGL_FBDEV)
 #ifndef USE_FBDEV
-#  define USE_FBDEV           0
+#  define USE_FBDEV           1
+#endif
 #endif
 
 #if USE_FBDEV
@@ -438,8 +452,10 @@
 /*-------------------------------------------------
  * Mouse or touchpad as evdev interface (for Linux based systems)
  *------------------------------------------------*/
+#if defined(VOORKANT_LVGL_FBDEV)
 #ifndef USE_EVDEV
-#  define USE_EVDEV           0
+#  define USE_EVDEV           1
+#endif
 #endif
 
 #ifndef USE_BSD_EVDEV
@@ -450,13 +466,15 @@
 #  define EVDEV_NAME   "/dev/input/event0"        /*You can use the "evtest" Linux tool to get the list of devices and test them*/
 #  define EVDEV_SWAP_AXES         0               /*Swap the x and y axes of the touchscreen*/
 
-#  define EVDEV_CALIBRATE         0               /*Scale and offset the touchscreen coordinates by using maximum and minimum values for each axis*/
+// voorkant: you will need this for more devices than you think. It's not just for "it's off by a few pixels". LVGL does not ask the ev device for its range, and just assumes it fits your display.
+// on Toon1, (0,0) is bottom left on touch, which is another reason you need calibration.
+#  define EVDEV_CALIBRATE         1               /*Scale and offset the touchscreen coordinates by using maximum and minimum values for each axis*/
 
 #  if EVDEV_CALIBRATE
-#    define EVDEV_HOR_MIN         0               /*to invert axis swap EVDEV_XXX_MIN by EVDEV_XXX_MAX*/
-#    define EVDEV_HOR_MAX      4096               /*"evtest" Linux tool can help to get the correct calibraion values>*/
-#    define EVDEV_VER_MIN         0
-#    define EVDEV_VER_MAX      4096
+#    define EVDEV_HOR_MIN       200               /*to invert axis swap EVDEV_XXX_MIN by EVDEV_XXX_MAX*/
+#    define EVDEV_HOR_MAX      3850               /*"evtest" Linux tool can help to get the correct calibraion values>*/
+#    define EVDEV_VER_MIN      3600
+#    define EVDEV_VER_MAX       320
 #  endif  /*EVDEV_CALIBRATE*/
 #endif  /*USE_EVDEV*/
 

