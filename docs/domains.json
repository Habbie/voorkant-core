{
    "id": 3,
    "result": {
        "alarm_control_panel": {
            "alarm_arm_away": {
                "description": "Sets the alarm to: _armed, no one home_.",
                "fields": {
                    "code": {
                        "description": "Code to arm the alarm.",
                        "example": "1234",
                        "name": "Code",
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Arm away",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "alarm_control_panel"
                            ],
                            "supported_features": [
                                2
                            ]
                        }
                    ]
                }
            },
            "alarm_arm_custom_bypass": {
                "description": "Arms the alarm while allowing to bypass a custom area.",
                "fields": {
                    "code": {
                        "description": "Code to arm the alarm.",
                        "example": "1234",
                        "name": "Code",
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Arm with custom bypass",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "alarm_control_panel"
                            ],
                            "supported_features": [
                                16
                            ]
                        }
                    ]
                }
            },
            "alarm_arm_home": {
                "description": "Sets the alarm to: _armed, but someone is home_.",
                "fields": {
                    "code": {
                        "description": "Code to arm the alarm.",
                        "example": "1234",
                        "name": "Code",
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Arm home",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "alarm_control_panel"
                            ],
                            "supported_features": [
                                1
                            ]
                        }
                    ]
                }
            },
            "alarm_arm_night": {
                "description": "Sets the alarm to: _armed for the night_.",
                "fields": {
                    "code": {
                        "description": "Code to arm the alarm.",
                        "example": "1234",
                        "name": "Code",
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Arm night",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "alarm_control_panel"
                            ],
                            "supported_features": [
                                4
                            ]
                        }
                    ]
                }
            },
            "alarm_arm_vacation": {
                "description": "Sets the alarm to: _armed for vacation_.",
                "fields": {
                    "code": {
                        "description": "Code to arm the alarm.",
                        "example": "1234",
                        "name": "Code",
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Arm vacation",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "alarm_control_panel"
                            ],
                            "supported_features": [
                                32
                            ]
                        }
                    ]
                }
            },
            "alarm_disarm": {
                "description": "Disarms the alarm.",
                "fields": {
                    "code": {
                        "description": "Code to disarm the alarm.",
                        "example": "1234",
                        "name": "Code",
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Disarm",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "alarm_control_panel"
                            ]
                        }
                    ]
                }
            },
            "alarm_trigger": {
                "description": "Enables an external alarm trigger.",
                "fields": {
                    "code": {
                        "description": "Code to arm the alarm.",
                        "example": "1234",
                        "name": "Code",
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Trigger",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "alarm_control_panel"
                            ],
                            "supported_features": [
                                8
                            ]
                        }
                    ]
                }
            }
        },
        "automation": {
            "reload": {
                "description": "Reloads the automation configuration.",
                "fields": {},
                "name": "Reload"
            },
            "toggle": {
                "description": "Toggles (enable / disable) an automation.",
                "fields": {},
                "name": "Toggle",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "automation"
                            ]
                        }
                    ]
                }
            },
            "trigger": {
                "description": "Triggers the actions of an automation.",
                "fields": {
                    "skip_condition": {
                        "default": true,
                        "description": "Defines whether or not the conditions will be skipped.",
                        "name": "Skip conditions",
                        "selector": {
                            "boolean": null
                        }
                    }
                },
                "name": "Trigger",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "automation"
                            ]
                        }
                    ]
                }
            },
            "turn_off": {
                "description": "Disables an automation.",
                "fields": {
                    "stop_actions": {
                        "default": true,
                        "description": "Stops currently running actions.",
                        "name": "Stop actions",
                        "selector": {
                            "boolean": null
                        }
                    }
                },
                "name": "Turn off",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "automation"
                            ]
                        }
                    ]
                }
            },
            "turn_on": {
                "description": "Enables an automation.",
                "fields": {},
                "name": "Turn on",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "automation"
                            ]
                        }
                    ]
                }
            }
        },
        "backup": {
            "create": {
                "description": "Creates a new backup.",
                "fields": {},
                "name": "Create backup"
            }
        },
        "button": {
            "press": {
                "description": "Press the button entity.",
                "fields": {},
                "name": "Press",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "button"
                            ]
                        }
                    ]
                }
            }
        },
        "calendar": {
            "create_event": {
                "description": "Adds a new calendar event.",
                "fields": {
                    "description": {
                        "description": "A more complete description of the event than the one provided by the summary.",
                        "example": "Meeting to provide technical review for 'Phoenix' design.",
                        "name": "Description",
                        "selector": {
                            "text": null
                        }
                    },
                    "end_date": {
                        "description": "The date the all-day event should end (exclusive).",
                        "example": "2022-03-23",
                        "name": "End date",
                        "selector": {
                            "date": null
                        }
                    },
                    "end_date_time": {
                        "description": "The date and time the event should end.",
                        "example": "2022-03-22 22:00:00",
                        "name": "End time",
                        "selector": {
                            "datetime": null
                        }
                    },
                    "in": {
                        "description": "Days or weeks that you want to create the event in.",
                        "example": "{\"days\": 2} or {\"weeks\": 2}",
                        "name": "In"
                    },
                    "location": {
                        "description": "The location of the event.",
                        "example": "Conference Room - F123, Bldg. 002",
                        "name": "Location",
                        "selector": {
                            "text": null
                        }
                    },
                    "start_date": {
                        "description": "The date the all-day event should start.",
                        "example": "2022-03-22",
                        "name": "Start date",
                        "selector": {
                            "date": null
                        }
                    },
                    "start_date_time": {
                        "description": "The date and time the event should start.",
                        "example": "2022-03-22 20:00:00",
                        "name": "Start time",
                        "selector": {
                            "datetime": null
                        }
                    },
                    "summary": {
                        "description": "Defines the short summary or subject for the event.",
                        "example": "Department Party",
                        "name": "Summary",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Create event",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "calendar"
                            ],
                            "supported_features": [
                                1
                            ]
                        }
                    ]
                }
            },
            "get_events": {
                "description": "Get events on a calendar within a time range.",
                "fields": {
                    "duration": {
                        "description": "Returns active events from start_date_time until the specified duration.",
                        "name": "Duration",
                        "selector": {
                            "duration": null
                        }
                    },
                    "end_date_time": {
                        "description": "Returns active events before this time (exclusive). Cannot be used with 'duration'.",
                        "example": "2022-03-22 22:00:00",
                        "name": "End time",
                        "selector": {
                            "datetime": null
                        }
                    },
                    "start_date_time": {
                        "description": "Returns active events after this time (exclusive). When not set, defaults to now.",
                        "example": "2022-03-22 20:00:00",
                        "name": "Start time",
                        "selector": {
                            "datetime": null
                        }
                    }
                },
                "name": "Get events",
                "response": {
                    "optional": false
                },
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "calendar"
                            ]
                        }
                    ]
                }
            },
            "list_events": {
                "description": "Lists events on a calendar within a time range.",
                "fields": {
                    "duration": {
                        "description": "Returns active events from start_date_time until the specified duration.",
                        "name": "Duration",
                        "selector": {
                            "duration": null
                        }
                    },
                    "end_date_time": {
                        "description": "Returns active events before this time (exclusive). Cannot be used with 'duration'.",
                        "example": "2022-03-22 22:00:00",
                        "name": "End time",
                        "selector": {
                            "datetime": null
                        }
                    },
                    "start_date_time": {
                        "description": "Returns active events after this time (exclusive). When not set, defaults to now.",
                        "example": "2022-03-22 20:00:00",
                        "name": "Start time",
                        "selector": {
                            "datetime": null
                        }
                    }
                },
                "name": "List event",
                "response": {
                    "optional": false
                },
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "calendar"
                            ]
                        }
                    ]
                }
            }
        },
        "camera": {
            "disable_motion_detection": {
                "description": "Disables the motion detection.",
                "fields": {},
                "name": "Disable motion detection",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "camera"
                            ]
                        }
                    ]
                }
            },
            "enable_motion_detection": {
                "description": "Enables the motion detection.",
                "fields": {},
                "name": "Enable motion detection",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "camera"
                            ]
                        }
                    ]
                }
            },
            "play_stream": {
                "description": "Plays the camera stream on a supported media player.",
                "fields": {
                    "format": {
                        "default": "hls",
                        "description": "Stream format supported by the media player.",
                        "name": "Format",
                        "selector": {
                            "select": {
                                "options": [
                                    "hls"
                                ]
                            }
                        }
                    },
                    "media_player": {
                        "description": "Media players to stream to.",
                        "name": "Media player",
                        "required": true,
                        "selector": {
                            "entity": {
                                "domain": "media_player"
                            }
                        }
                    }
                },
                "name": "Play stream",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "camera"
                            ]
                        }
                    ]
                }
            },
            "record": {
                "description": "Creates a recording of a live camera feed.",
                "fields": {
                    "duration": {
                        "default": 30,
                        "description": "Planned duration of the recording. The actual duration may vary.",
                        "name": "Duration",
                        "selector": {
                            "number": {
                                "max": 3600,
                                "min": 1,
                                "unit_of_measurement": "seconds"
                            }
                        }
                    },
                    "filename": {
                        "description": "Template of a filename. Variable available is `entity_id`. Must be mp4.",
                        "example": "/tmp/snapshot_{{ entity_id.name }}.mp4",
                        "name": "Filename",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    },
                    "lookback": {
                        "default": 0,
                        "description": "Planned lookback period to include in the recording (in addition to the duration). Only available if there is currently an active HLS stream. The actual length of the lookback period may vary.",
                        "name": "Lookback",
                        "selector": {
                            "number": {
                                "max": 300,
                                "min": 0,
                                "unit_of_measurement": "seconds"
                            }
                        }
                    }
                },
                "name": "Record",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "camera"
                            ]
                        }
                    ]
                }
            },
            "snapshot": {
                "description": "Takes a snapshot from a camera.",
                "fields": {
                    "filename": {
                        "description": "Template of a filename. Variable available is `entity_id`.",
                        "example": "/tmp/snapshot_{{ entity_id.name }}.jpg",
                        "name": "Filename",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Take snapshot",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "camera"
                            ]
                        }
                    ]
                }
            },
            "turn_off": {
                "description": "Turns off the camera.",
                "fields": {},
                "name": "Turn off",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "camera"
                            ]
                        }
                    ]
                }
            },
            "turn_on": {
                "description": "Turns on the camera.",
                "fields": {},
                "name": "Turn on",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "camera"
                            ]
                        }
                    ]
                }
            }
        },
        "climate": {
            "set_aux_heat": {
                "description": "Turns auxiliary heater on/off.",
                "fields": {
                    "aux_heat": {
                        "description": "New value of auxiliary heater.",
                        "name": "Auxiliary heating",
                        "required": true,
                        "selector": {
                            "boolean": null
                        }
                    }
                },
                "name": "Turn on/off auxiliary heater",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "climate"
                            ],
                            "supported_features": [
                                64
                            ]
                        }
                    ]
                }
            },
            "set_fan_mode": {
                "description": "Sets fan operation mode.",
                "fields": {
                    "fan_mode": {
                        "description": "Fan operation mode.",
                        "example": "low",
                        "name": "Fan mode",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Set fan mode",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "climate"
                            ],
                            "supported_features": [
                                8
                            ]
                        }
                    ]
                }
            },
            "set_humidity": {
                "description": "Sets target humidity.",
                "fields": {
                    "humidity": {
                        "description": "Target humidity.",
                        "name": "Humidity",
                        "required": true,
                        "selector": {
                            "number": {
                                "max": 99,
                                "min": 30,
                                "unit_of_measurement": "%"
                            }
                        }
                    }
                },
                "name": "Set target humidity",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "climate"
                            ],
                            "supported_features": [
                                4
                            ]
                        }
                    ]
                }
            },
            "set_hvac_mode": {
                "description": "Sets HVAC operation mode.",
                "fields": {
                    "hvac_mode": {
                        "description": "HVAC operation mode.",
                        "name": "HVAC mode",
                        "selector": {
                            "select": {
                                "options": [
                                    "off",
                                    "auto",
                                    "cool",
                                    "dry",
                                    "fan_only",
                                    "heat_cool",
                                    "heat"
                                ],
                                "translation_key": "hvac_mode"
                            }
                        }
                    }
                },
                "name": "Set HVAC mode",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "climate"
                            ]
                        }
                    ]
                }
            },
            "set_preset_mode": {
                "description": "Sets preset mode.",
                "fields": {
                    "preset_mode": {
                        "description": "Preset mode.",
                        "example": "away",
                        "name": "Preset mode",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Set preset mode",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "climate"
                            ],
                            "supported_features": [
                                16
                            ]
                        }
                    ]
                }
            },
            "set_swing_mode": {
                "description": "Sets swing operation mode.",
                "fields": {
                    "swing_mode": {
                        "description": "Swing operation mode.",
                        "example": "horizontal",
                        "name": "Swing mode",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Set swing mode",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "climate"
                            ],
                            "supported_features": [
                                32
                            ]
                        }
                    ]
                }
            },
            "set_temperature": {
                "description": "Sets target temperature.",
                "fields": {
                    "hvac_mode": {
                        "description": "HVAC operation mode.",
                        "name": "HVAC mode",
                        "selector": {
                            "select": {
                                "options": [
                                    "off",
                                    "auto",
                                    "cool",
                                    "dry",
                                    "fan_only",
                                    "heat_cool",
                                    "heat"
                                ],
                                "translation_key": "hvac_mode"
                            }
                        }
                    },
                    "target_temp_high": {
                        "advanced": true,
                        "description": "High target temperature.",
                        "filter": {
                            "supported_features": [
                                2
                            ]
                        },
                        "name": "Target temperature high",
                        "selector": {
                            "number": {
                                "max": 250,
                                "min": 0,
                                "mode": "box",
                                "step": 0.1
                            }
                        }
                    },
                    "target_temp_low": {
                        "advanced": true,
                        "description": "Low target temperature.",
                        "filter": {
                            "supported_features": [
                                2
                            ]
                        },
                        "name": "Target temperature low",
                        "selector": {
                            "number": {
                                "max": 250,
                                "min": 0,
                                "mode": "box",
                                "step": 0.1
                            }
                        }
                    },
                    "temperature": {
                        "description": "Target temperature.",
                        "filter": {
                            "supported_features": [
                                1
                            ]
                        },
                        "name": "Temperature",
                        "selector": {
                            "number": {
                                "max": 250,
                                "min": 0,
                                "mode": "box",
                                "step": 0.1
                            }
                        }
                    }
                },
                "name": "Set target temperature",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "climate"
                            ],
                            "supported_features": [
                                1,
                                2
                            ]
                        }
                    ]
                }
            },
            "turn_off": {
                "description": "Turns climate device off.",
                "fields": {},
                "name": "Turn off",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "climate"
                            ]
                        }
                    ]
                }
            },
            "turn_on": {
                "description": "Turns climate device on.",
                "fields": {},
                "name": "Turn on",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "climate"
                            ]
                        }
                    ]
                }
            }
        },
        "cloud": {
            "remote_connect": {
                "description": "Makes the instance UI accessible from outside of the local network by using Home Assistant Cloud.",
                "fields": {},
                "name": "Remote connect"
            },
            "remote_disconnect": {
                "description": "Disconnects the Home Assistant UI from the Home Assistant Cloud. You will no longer be able to access your Home Assistant instance from outside your local network.",
                "fields": {},
                "name": "Remote disconnect"
            }
        },
        "conversation": {
            "process": {
                "description": "Launches a conversation from a transcribed text.",
                "fields": {
                    "agent_id": {
                        "description": "Conversation agent to process your request. The conversation agent is the brains of your assistant. It processes the incoming text commands.",
                        "example": "homeassistant",
                        "name": "Agent",
                        "selector": {
                            "conversation_agent": null
                        }
                    },
                    "language": {
                        "description": "Language of text. Defaults to server language.",
                        "example": "NL",
                        "name": "Language",
                        "selector": {
                            "text": null
                        }
                    },
                    "text": {
                        "description": "Transcribed text input.",
                        "example": "Turn all lights on",
                        "name": "Text",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Process",
                "response": {
                    "optional": true
                }
            },
            "reload": {
                "description": "Reloads the intent configuration.",
                "fields": {
                    "agent_id": {
                        "description": "Conversation agent to reload.",
                        "example": "homeassistant",
                        "name": "Agent",
                        "selector": {
                            "conversation_agent": null
                        }
                    },
                    "language": {
                        "description": "Language to clear cached intents for. Defaults to server language.",
                        "example": "NL",
                        "name": "Language",
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Reload"
            }
        },
        "counter": {
            "decrement": {
                "description": "Decrements a counter.",
                "fields": {},
                "name": "Decrement",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "counter"
                            ]
                        }
                    ]
                }
            },
            "increment": {
                "description": "Increments a counter.",
                "fields": {},
                "name": "Increment",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "counter"
                            ]
                        }
                    ]
                }
            },
            "reset": {
                "description": "Resets a counter.",
                "fields": {},
                "name": "Reset",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "counter"
                            ]
                        }
                    ]
                }
            },
            "set_value": {
                "description": "Sets the counter value.",
                "fields": {
                    "value": {
                        "description": "The new counter value the entity should be set to.",
                        "name": "Value",
                        "required": true,
                        "selector": {
                            "number": {
                                "max": 9223372036854775807,
                                "min": 0,
                                "mode": "box"
                            }
                        }
                    }
                },
                "name": "Set",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "counter"
                            ]
                        }
                    ]
                }
            }
        },
        "cover": {
            "close_cover": {
                "description": "Closes a cover.",
                "fields": {},
                "name": "Close",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "cover"
                            ],
                            "supported_features": [
                                2
                            ]
                        }
                    ]
                }
            },
            "close_cover_tilt": {
                "description": "Tilts a cover to close.",
                "fields": {},
                "name": "Close tilt",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "cover"
                            ],
                            "supported_features": [
                                32
                            ]
                        }
                    ]
                }
            },
            "open_cover": {
                "description": "Opens a cover.",
                "fields": {},
                "name": "Open",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "cover"
                            ],
                            "supported_features": [
                                1
                            ]
                        }
                    ]
                }
            },
            "open_cover_tilt": {
                "description": "Tilts a cover open.",
                "fields": {},
                "name": "Open tilt",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "cover"
                            ],
                            "supported_features": [
                                16
                            ]
                        }
                    ]
                }
            },
            "set_cover_position": {
                "description": "Moves a cover to a specific position.",
                "fields": {
                    "position": {
                        "description": "Target position.",
                        "name": "Position",
                        "required": true,
                        "selector": {
                            "number": {
                                "max": 100,
                                "min": 0,
                                "unit_of_measurement": "%"
                            }
                        }
                    }
                },
                "name": "Set position",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "cover"
                            ],
                            "supported_features": [
                                4
                            ]
                        }
                    ]
                }
            },
            "set_cover_tilt_position": {
                "description": "Moves a cover tilt to a specific position.",
                "fields": {
                    "tilt_position": {
                        "description": "Target tilt positition.",
                        "name": "Tilt position",
                        "required": true,
                        "selector": {
                            "number": {
                                "max": 100,
                                "min": 0,
                                "unit_of_measurement": "%"
                            }
                        }
                    }
                },
                "name": "Set tilt position",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "cover"
                            ],
                            "supported_features": [
                                128
                            ]
                        }
                    ]
                }
            },
            "stop_cover": {
                "description": "Stops the cover movement.",
                "fields": {},
                "name": "Stop",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "cover"
                            ],
                            "supported_features": [
                                8
                            ]
                        }
                    ]
                }
            },
            "stop_cover_tilt": {
                "description": "Stops a tilting cover movement.",
                "fields": {},
                "name": "Stop tilt",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "cover"
                            ],
                            "supported_features": [
                                64
                            ]
                        }
                    ]
                }
            },
            "toggle": {
                "description": "Toggles a cover open/closed.",
                "fields": {},
                "name": "Toggle",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "cover"
                            ],
                            "supported_features": [
                                3
                            ]
                        }
                    ]
                }
            },
            "toggle_cover_tilt": {
                "description": "Toggles a cover tilt open/closed.",
                "fields": {},
                "name": "Toggle tilt",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "cover"
                            ],
                            "supported_features": [
                                48
                            ]
                        }
                    ]
                }
            }
        },
        "date": {
            "set_value": {
                "description": "Sets the date.",
                "fields": {
                    "date": {
                        "description": "The date to set.",
                        "example": "2022/11/01",
                        "name": "Date",
                        "required": true,
                        "selector": {
                            "date": null
                        }
                    }
                },
                "name": "Set date",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "date"
                            ]
                        }
                    ]
                }
            }
        },
        "datetime": {
            "set_value": {
                "description": "Sets the date/time for a datetime entity.",
                "fields": {
                    "datetime": {
                        "description": "The date/time to set. The time zone of the Home Assistant instance is assumed.",
                        "example": "2023-10-07T21:35:22",
                        "name": "Date & Time",
                        "required": true,
                        "selector": {
                            "datetime": null
                        }
                    }
                },
                "name": "Set date/time",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "datetime"
                            ]
                        }
                    ]
                }
            }
        },
        "demo": {
            "randomize_device_tracker_data": {
                "description": "Demonstrates using a device tracker to see where devices are located.",
                "fields": {},
                "name": "Randomize device tracker data"
            }
        },
        "device_tracker": {
            "see": {
                "description": "Records a seen tracked device.",
                "fields": {
                    "battery": {
                        "description": "Battery level of the device.",
                        "name": "Battery level",
                        "selector": {
                            "number": {
                                "max": 100,
                                "min": 0,
                                "unit_of_measurement": "%"
                            }
                        }
                    },
                    "dev_id": {
                        "description": "ID of the device (find the ID in `known_devices.yaml`).",
                        "example": "phonedave",
                        "name": "Device ID",
                        "selector": {
                            "text": null
                        }
                    },
                    "gps": {
                        "description": "GPS coordinates where the device is located, specified by latitude and longitude (for example: [51.513845, -0.100539]).",
                        "example": "[51.509802, -0.086692]",
                        "name": "GPS coordinates",
                        "selector": {
                            "object": null
                        }
                    },
                    "gps_accuracy": {
                        "description": "Accuracy of the GPS coordinates.",
                        "name": "GPS accuracy",
                        "selector": {
                            "number": {
                                "min": 0,
                                "mode": "box",
                                "unit_of_measurement": "m"
                            }
                        }
                    },
                    "host_name": {
                        "description": "Hostname of the device.",
                        "example": "Dave",
                        "name": "Hostname",
                        "selector": {
                            "text": null
                        }
                    },
                    "location_name": {
                        "description": "Name of the location where the device is located. The options are: `home`, `not_home`, or the name of the zone.",
                        "example": "home",
                        "name": "Location",
                        "selector": {
                            "text": null
                        }
                    },
                    "mac": {
                        "description": "MAC address of the device.",
                        "example": "FF:FF:FF:FF:FF:FF",
                        "name": "MAC address",
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "See"
            }
        },
        "fan": {
            "decrease_speed": {
                "description": "Decreases the speed of the fan.",
                "fields": {
                    "percentage_step": {
                        "advanced": true,
                        "description": "Decreases the speed by a percentage step.",
                        "name": "Decrement",
                        "required": false,
                        "selector": {
                            "number": {
                                "max": 100,
                                "min": 0,
                                "unit_of_measurement": "%"
                            }
                        }
                    }
                },
                "name": "Decrease speed",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "fan"
                            ],
                            "supported_features": [
                                1
                            ]
                        }
                    ]
                }
            },
            "increase_speed": {
                "description": "Increases the speed of the fan.",
                "fields": {
                    "percentage_step": {
                        "advanced": true,
                        "description": "Increases the speed by a percentage step.",
                        "name": "Increment",
                        "required": false,
                        "selector": {
                            "number": {
                                "max": 100,
                                "min": 0,
                                "unit_of_measurement": "%"
                            }
                        }
                    }
                },
                "name": "Increase speed",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "fan"
                            ],
                            "supported_features": [
                                1
                            ]
                        }
                    ]
                }
            },
            "oscillate": {
                "description": "Controls oscillatation of the fan.",
                "fields": {
                    "oscillating": {
                        "description": "Turn on/off oscillation.",
                        "name": "Oscillating",
                        "required": true,
                        "selector": {
                            "boolean": null
                        }
                    }
                },
                "name": "Oscillate",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "fan"
                            ],
                            "supported_features": [
                                2
                            ]
                        }
                    ]
                }
            },
            "set_direction": {
                "description": "Sets the fan rotation direction.",
                "fields": {
                    "direction": {
                        "description": "Direction to rotate.",
                        "name": "Direction",
                        "required": true,
                        "selector": {
                            "select": {
                                "options": [
                                    "forward",
                                    "reverse"
                                ],
                                "translation_key": "direction"
                            }
                        }
                    }
                },
                "name": "Set direction",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "fan"
                            ],
                            "supported_features": [
                                4
                            ]
                        }
                    ]
                }
            },
            "set_percentage": {
                "description": "Sets the fan speed.",
                "fields": {
                    "percentage": {
                        "description": "Speed of the fan.",
                        "name": "Percentage",
                        "required": true,
                        "selector": {
                            "number": {
                                "max": 100,
                                "min": 0,
                                "unit_of_measurement": "%"
                            }
                        }
                    }
                },
                "name": "Set speed",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "fan"
                            ],
                            "supported_features": [
                                1
                            ]
                        }
                    ]
                }
            },
            "set_preset_mode": {
                "description": "Sets preset mode.",
                "fields": {
                    "preset_mode": {
                        "description": "Preset mode.",
                        "example": "auto",
                        "name": "Preset mode",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Set preset mode",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "fan"
                            ],
                            "supported_features": [
                                8
                            ]
                        }
                    ]
                }
            },
            "toggle": {
                "description": "Toggles the fan on/off.",
                "fields": {},
                "name": "Toggle",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "fan"
                            ]
                        }
                    ]
                }
            },
            "turn_off": {
                "description": "Turns fan off.",
                "fields": {},
                "name": "Turn off",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "fan"
                            ]
                        }
                    ]
                }
            },
            "turn_on": {
                "description": "Turns fan on.",
                "fields": {
                    "percentage": {
                        "description": "Speed of the fan.",
                        "filter": {
                            "supported_features": [
                                1
                            ]
                        },
                        "name": "Percentage",
                        "selector": {
                            "number": {
                                "max": 100,
                                "min": 0,
                                "unit_of_measurement": "%"
                            }
                        }
                    },
                    "preset_mode": {
                        "description": "Preset mode.",
                        "example": "auto",
                        "filter": {
                            "supported_features": [
                                8
                            ]
                        },
                        "name": "Preset mode",
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Turn on",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "fan"
                            ]
                        }
                    ]
                }
            }
        },
        "ffmpeg": {
            "restart": {
                "description": "Sends a restart command to a ffmpeg based sensor.",
                "fields": {
                    "entity_id": {
                        "description": "Name of entity that will restart. Platform dependent.",
                        "name": "Entity",
                        "selector": {
                            "entity": {
                                "domain": "binary_sensor",
                                "integration": "ffmpeg"
                            }
                        }
                    }
                },
                "name": "Restart"
            },
            "start": {
                "description": "Sends a start command to a ffmpeg based sensor.",
                "fields": {
                    "entity_id": {
                        "description": "Name of entity that will start. Platform dependent.",
                        "name": "Entity",
                        "selector": {
                            "entity": {
                                "domain": "binary_sensor",
                                "integration": "ffmpeg"
                            }
                        }
                    }
                },
                "name": "Start"
            },
            "stop": {
                "description": "Sends a stop command to a ffmpeg based sensor.",
                "fields": {
                    "entity_id": {
                        "description": "Name of entity that will stop. Platform dependent.",
                        "name": "Entity",
                        "selector": {
                            "entity": {
                                "domain": "binary_sensor",
                                "integration": "ffmpeg"
                            }
                        }
                    }
                },
                "name": "Stop"
            }
        },
        "frontend": {
            "reload_themes": {
                "description": "Reloads themes from the YAML-configuration.",
                "fields": {},
                "name": "Reload themes"
            },
            "set_theme": {
                "description": "Sets the default theme Home Assistant uses. Can be overridden by a user.",
                "fields": {
                    "mode": {
                        "default": "light",
                        "description": "Theme mode.",
                        "name": "Mode",
                        "selector": {
                            "select": {
                                "options": [
                                    "dark",
                                    "light"
                                ],
                                "translation_key": "mode"
                            }
                        }
                    },
                    "name": {
                        "description": "Name of a theme.",
                        "example": "default",
                        "name": "Theme",
                        "required": true,
                        "selector": {
                            "theme": {
                                "include_default": true
                            }
                        }
                    }
                },
                "name": "Set the default theme"
            }
        },
        "group": {
            "reload": {
                "description": "Reloads group configuration, entities, and notify services from YAML-configuration.",
                "fields": {},
                "name": "Reload"
            },
            "remove": {
                "description": "Removes a group.",
                "fields": {
                    "object_id": {
                        "description": "Object ID of this group. This object ID is used as part of the entity ID. Entity ID format: [domain].[object_id].",
                        "example": "test_group",
                        "name": "Object ID",
                        "required": true,
                        "selector": {
                            "object": null
                        }
                    }
                },
                "name": "Remove"
            },
            "set": {
                "description": "Creates/Updates a user group.",
                "fields": {
                    "add_entities": {
                        "description": "List of members to be added to the group. Cannot be used in combination with `Entities` or `Remove entities`.",
                        "example": "domain.entity_id1, domain.entity_id2",
                        "name": "Add entities",
                        "selector": {
                            "entity": {
                                "multiple": true
                            }
                        }
                    },
                    "all": {
                        "description": "Enable this option if the group should only be used when all entities are in state `on`.",
                        "name": "All",
                        "selector": {
                            "boolean": null
                        }
                    },
                    "entities": {
                        "description": "List of all members in the group. Cannot be used in combination with `Add entities` or `Remove entities`.",
                        "example": "domain.entity_id1, domain.entity_id2",
                        "name": "Entities",
                        "selector": {
                            "entity": {
                                "multiple": true
                            }
                        }
                    },
                    "icon": {
                        "description": "Name of the icon for the group.",
                        "example": "mdi:camera",
                        "name": "Icon",
                        "selector": {
                            "icon": null
                        }
                    },
                    "name": {
                        "description": "Name of the group.",
                        "example": "My test group",
                        "name": "Name",
                        "selector": {
                            "text": null
                        }
                    },
                    "object_id": {
                        "description": "Object ID of this group. This object ID is used as part of the entity ID. Entity ID format: [domain].[object_id].",
                        "example": "test_group",
                        "name": "Object ID",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    },
                    "remove_entities": {
                        "description": "List of members to be removed from a group. Cannot be used in combination with `Entities` or `Add entities`.",
                        "example": "domain.entity_id1, domain.entity_id2",
                        "name": "Remove entities",
                        "selector": {
                            "entity": {
                                "multiple": true
                            }
                        }
                    }
                },
                "name": "Set"
            }
        },
        "homeassistant": {
            "check_config": {
                "description": "Checks the Home Assistant YAML-configuration files for errors. Errors will be shown in the Home Assistant logs.",
                "fields": {},
                "name": "Check configuration"
            },
            "reload_all": {
                "description": "Reload all YAML configuration that can be reloaded without restarting Home Assistant.",
                "fields": {},
                "name": "Reload all"
            },
            "reload_config_entry": {
                "description": "Reloads the specified config entry.",
                "fields": {
                    "entry_id": {
                        "advanced": true,
                        "description": "The configuration entry ID of the entry to be reloaded.",
                        "example": "8955375327824e14ba89e4b29cc3ec9a",
                        "name": "Config entry ID",
                        "required": false,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Reload config entry",
                "target": {
                    "device": [
                        {}
                    ],
                    "entity": [
                        {}
                    ]
                }
            },
            "reload_core_config": {
                "description": "Reloads the core configuration from the YAML-configuration.",
                "fields": {},
                "name": "Reload core configuration"
            },
            "reload_custom_templates": {
                "description": "Reloads Jinja2 templates found in the `custom_templates` folder in your config. New values will be applied on the next render of the template.",
                "fields": {},
                "name": "Reload custom Jinja2 templates"
            },
            "restart": {
                "description": "Restarts Home Assistant.",
                "fields": {},
                "name": "Restart"
            },
            "save_persistent_states": {
                "description": "Saves the persistent states immediately. Maintains the normal periodic saving interval.",
                "fields": {},
                "name": "Save persistent states"
            },
            "set_location": {
                "description": "Updates the Home Assistant location.",
                "fields": {
                    "elevation": {
                        "description": "Elevation of your location.",
                        "example": 120,
                        "name": "Elevation",
                        "required": false,
                        "selector": {
                            "number": {
                                "mode": "box",
                                "step": "any"
                            }
                        }
                    },
                    "latitude": {
                        "description": "Latitude of your location.",
                        "example": 32.87336,
                        "name": "Latitude",
                        "required": true,
                        "selector": {
                            "number": {
                                "max": 90,
                                "min": -90,
                                "mode": "box",
                                "step": "any"
                            }
                        }
                    },
                    "longitude": {
                        "description": "Longitude of your location.",
                        "example": 117.22743,
                        "name": "Longitude",
                        "required": true,
                        "selector": {
                            "number": {
                                "max": 180,
                                "min": -180,
                                "mode": "box",
                                "step": "any"
                            }
                        }
                    }
                },
                "name": "Set location"
            },
            "stop": {
                "description": "Stops Home Assistant.",
                "fields": {},
                "name": "Stop"
            },
            "toggle": {
                "description": "Generic service to toggle devices on/off under any domain.",
                "fields": {},
                "name": "Generic toggle",
                "target": {
                    "entity": [
                        {}
                    ]
                }
            },
            "turn_off": {
                "description": "Generic service to turn devices off under any domain.",
                "fields": {},
                "name": "Generic turn off",
                "target": {
                    "entity": [
                        {}
                    ]
                }
            },
            "turn_on": {
                "description": "Generic service to turn devices on under any domain.",
                "fields": {},
                "name": "Generic turn on",
                "target": {
                    "entity": [
                        {}
                    ]
                }
            },
            "update_entity": {
                "description": "Forces one or more entities to update its data.",
                "fields": {},
                "name": "Update entity",
                "target": {
                    "entity": [
                        {}
                    ]
                }
            }
        },
        "humidifier": {
            "set_humidity": {
                "description": "Sets the target humidity.",
                "fields": {
                    "humidity": {
                        "description": "Target humidity.",
                        "name": "Humidity",
                        "required": true,
                        "selector": {
                            "number": {
                                "max": 100,
                                "min": 0,
                                "unit_of_measurement": "%"
                            }
                        }
                    }
                },
                "name": "Set humidity",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "humidifier"
                            ]
                        }
                    ]
                }
            },
            "set_mode": {
                "description": "Sets the humidifier operation mode.",
                "fields": {
                    "mode": {
                        "description": "Operation mode. For example, _normal_, _eco_, or _away_. For a list of possible values, refer to the integration documentation.",
                        "example": "away",
                        "name": "Mode",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Set mode",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "humidifier"
                            ],
                            "supported_features": [
                                1
                            ]
                        }
                    ]
                }
            },
            "toggle": {
                "description": "Toggles the humidifier on/off.",
                "fields": {},
                "name": "Toggle",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "humidifier"
                            ]
                        }
                    ]
                }
            },
            "turn_off": {
                "description": "Turns the humidifier off.",
                "fields": {},
                "name": "Turn off",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "humidifier"
                            ]
                        }
                    ]
                }
            },
            "turn_on": {
                "description": "Turns the humidifier on.",
                "fields": {},
                "name": "Turn on",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "humidifier"
                            ]
                        }
                    ]
                }
            }
        },
        "image_processing": {
            "scan": {
                "description": "Processes an image immediately.",
                "fields": {},
                "name": "Scan",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "image_processing"
                            ]
                        }
                    ]
                }
            }
        },
        "input_boolean": {
            "reload": {
                "description": "Reloads helpers from the YAML-configuration.",
                "fields": {},
                "name": "Reload"
            },
            "toggle": {
                "description": "Toggles the helper on/off.",
                "fields": {},
                "name": "Toggle",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "input_boolean"
                            ]
                        }
                    ]
                }
            },
            "turn_off": {
                "description": "Turns off the helper.",
                "fields": {},
                "name": "Turn off",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "input_boolean"
                            ]
                        }
                    ]
                }
            },
            "turn_on": {
                "description": "Turns on the helper.",
                "fields": {},
                "name": "Turn on",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "input_boolean"
                            ]
                        }
                    ]
                }
            }
        },
        "input_button": {
            "press": {
                "description": "Mimics the physical button press on the device.",
                "fields": {},
                "name": "Press",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "input_button"
                            ]
                        }
                    ]
                }
            },
            "reload": {
                "description": "Reloads helpers from the YAML-configuration.",
                "fields": {},
                "name": "Reload"
            }
        },
        "input_datetime": {
            "reload": {
                "description": "Reloads helpers from the YAML-configuration.",
                "fields": {},
                "name": "Reload"
            },
            "set_datetime": {
                "description": "Sets the date and/or time.",
                "fields": {
                    "date": {
                        "description": "The target date.",
                        "example": "\"2019-04-20\"",
                        "name": "Date",
                        "selector": {
                            "text": null
                        }
                    },
                    "datetime": {
                        "description": "The target date & time.",
                        "example": "\"2019-04-20 05:04:20\"",
                        "name": "Date & time",
                        "selector": {
                            "text": null
                        }
                    },
                    "time": {
                        "description": "The target time.",
                        "example": "\"05:04:20\"",
                        "name": "Time",
                        "selector": {
                            "time": null
                        }
                    },
                    "timestamp": {
                        "description": "The target date & time, expressed by a UNIX timestamp.",
                        "name": "Timestamp",
                        "selector": {
                            "number": {
                                "max": 9223372036854775807,
                                "min": 0,
                                "mode": "box"
                            }
                        }
                    }
                },
                "name": "Set",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "input_datetime"
                            ]
                        }
                    ]
                }
            }
        },
        "input_number": {
            "decrement": {
                "description": "Decrements the current value by 1 step.",
                "fields": {},
                "name": "Decrement",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "input_number"
                            ]
                        }
                    ]
                }
            },
            "increment": {
                "description": "Increments the value by 1 step.",
                "fields": {},
                "name": "Increment",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "input_number"
                            ]
                        }
                    ]
                }
            },
            "reload": {
                "description": "Reloads helpers from the YAML-configuration.",
                "fields": {},
                "name": "Reload"
            },
            "set_value": {
                "description": "Sets the value.",
                "fields": {
                    "value": {
                        "description": "The target value.",
                        "name": "Value",
                        "required": true,
                        "selector": {
                            "number": {
                                "max": 9223372036854775807,
                                "min": 0,
                                "mode": "box",
                                "step": 0.001
                            }
                        }
                    }
                },
                "name": "Set",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "input_number"
                            ]
                        }
                    ]
                }
            }
        },
        "input_select": {
            "reload": {
                "description": "Reloads helpers from the YAML-configuration.",
                "fields": {},
                "name": "Reload"
            },
            "select_first": {
                "description": "Selects the first option.",
                "fields": {},
                "name": "First",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "input_select"
                            ]
                        }
                    ]
                }
            },
            "select_last": {
                "description": "Selects the last option.",
                "fields": {},
                "name": "Last",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "input_select"
                            ]
                        }
                    ]
                }
            },
            "select_next": {
                "description": "Select the next option.",
                "fields": {
                    "cycle": {
                        "default": true,
                        "description": "If the option should cycle from the last to the first option on the list.",
                        "name": "Cycle",
                        "selector": {
                            "boolean": null
                        }
                    }
                },
                "name": "Next",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "input_select"
                            ]
                        }
                    ]
                }
            },
            "select_option": {
                "description": "Selects an option.",
                "fields": {
                    "option": {
                        "description": "Option to be selected.",
                        "example": "\"Item A\"",
                        "name": "Option",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Select",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "input_select"
                            ]
                        }
                    ]
                }
            },
            "select_previous": {
                "description": "Selects the previous option.",
                "fields": {
                    "cycle": {
                        "default": true,
                        "description": "If the option should cycle from the last to the first option on the list.",
                        "name": "Cycle",
                        "selector": {
                            "boolean": null
                        }
                    }
                },
                "name": "Previous",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "input_select"
                            ]
                        }
                    ]
                }
            },
            "set_options": {
                "description": "Sets the options.",
                "fields": {
                    "options": {
                        "description": "List of options.",
                        "example": "[\"Item A\", \"Item B\", \"Item C\"]",
                        "name": "Options",
                        "required": true,
                        "selector": {
                            "object": null
                        }
                    }
                },
                "name": "Set options",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "input_select"
                            ]
                        }
                    ]
                }
            }
        },
        "input_text": {
            "reload": {
                "description": "Reloads helpers from the YAML-configuration.",
                "fields": {},
                "name": "Reload"
            },
            "set_value": {
                "description": "Sets the value.",
                "fields": {
                    "value": {
                        "description": "The target value.",
                        "example": "This is an example text",
                        "name": "Value",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Set",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "input_text"
                            ]
                        }
                    ]
                }
            }
        },
        "light": {
            "toggle": {
                "description": "Toggles one or more lights, from on to off, or, off to on, based on their current state.",
                "fields": {
                    "brightness": {
                        "advanced": true,
                        "description": "Number indicating brightness, where 0 turns the light off, 1 is the minimum brightness, and 255 is the maximum brightness.",
                        "filter": {
                            "attribute": {
                                "supported_color_modes": [
                                    "brightness",
                                    "color_temp",
                                    "hs",
                                    "xy",
                                    "rgb",
                                    "rgbw",
                                    "rgbww"
                                ]
                            }
                        },
                        "name": "Brightness value",
                        "selector": {
                            "number": {
                                "max": 255,
                                "min": 0
                            }
                        }
                    },
                    "brightness_pct": {
                        "description": "Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness.",
                        "filter": {
                            "attribute": {
                                "supported_color_modes": [
                                    "brightness",
                                    "color_temp",
                                    "hs",
                                    "xy",
                                    "rgb",
                                    "rgbw",
                                    "rgbww"
                                ]
                            }
                        },
                        "name": "Brightness",
                        "selector": {
                            "number": {
                                "max": 100,
                                "min": 0,
                                "unit_of_measurement": "%"
                            }
                        }
                    },
                    "color_name": {
                        "advanced": true,
                        "description": "A human-readable color name.",
                        "filter": {
                            "attribute": {
                                "supported_color_modes": [
                                    "hs",
                                    "xy",
                                    "rgb",
                                    "rgbw",
                                    "rgbww"
                                ]
                            }
                        },
                        "name": "Color name",
                        "selector": {
                            "select": {
                                "options": [
                                    "homeassistant",
                                    "aliceblue",
                                    "antiquewhite",
                                    "aqua",
                                    "aquamarine",
                                    "azure",
                                    "beige",
                                    "bisque",
                                    "blanchedalmond",
                                    "blue",
                                    "blueviolet",
                                    "brown",
                                    "burlywood",
                                    "cadetblue",
                                    "chartreuse",
                                    "chocolate",
                                    "coral",
                                    "cornflowerblue",
                                    "cornsilk",
                                    "crimson",
                                    "cyan",
                                    "darkblue",
                                    "darkcyan",
                                    "darkgoldenrod",
                                    "darkgray",
                                    "darkgreen",
                                    "darkgrey",
                                    "darkkhaki",
                                    "darkmagenta",
                                    "darkolivegreen",
                                    "darkorange",
                                    "darkorchid",
                                    "darkred",
                                    "darksalmon",
                                    "darkseagreen",
                                    "darkslateblue",
                                    "darkslategray",
                                    "darkslategrey",
                                    "darkturquoise",
                                    "darkviolet",
                                    "deeppink",
                                    "deepskyblue",
                                    "dimgray",
                                    "dimgrey",
                                    "dodgerblue",
                                    "firebrick",
                                    "floralwhite",
                                    "forestgreen",
                                    "fuchsia",
                                    "gainsboro",
                                    "ghostwhite",
                                    "gold",
                                    "goldenrod",
                                    "gray",
                                    "green",
                                    "greenyellow",
                                    "grey",
                                    "honeydew",
                                    "hotpink",
                                    "indianred",
                                    "indigo",
                                    "ivory",
                                    "khaki",
                                    "lavender",
                                    "lavenderblush",
                                    "lawngreen",
                                    "lemonchiffon",
                                    "lightblue",
                                    "lightcoral",
                                    "lightcyan",
                                    "lightgoldenrodyellow",
                                    "lightgray",
                                    "lightgreen",
                                    "lightgrey",
                                    "lightpink",
                                    "lightsalmon",
                                    "lightseagreen",
                                    "lightskyblue",
                                    "lightslategray",
                                    "lightslategrey",
                                    "lightsteelblue",
                                    "lightyellow",
                                    "lime",
                                    "limegreen",
                                    "linen",
                                    "magenta",
                                    "maroon",
                                    "mediumaquamarine",
                                    "mediumblue",
                                    "mediumorchid",
                                    "mediumpurple",
                                    "mediumseagreen",
                                    "mediumslateblue",
                                    "mediumspringgreen",
                                    "mediumturquoise",
                                    "mediumvioletred",
                                    "midnightblue",
                                    "mintcream",
                                    "mistyrose",
                                    "moccasin",
                                    "navajowhite",
                                    "navy",
                                    "navyblue",
                                    "oldlace",
                                    "olive",
                                    "olivedrab",
                                    "orange",
                                    "orangered",
                                    "orchid",
                                    "palegoldenrod",
                                    "palegreen",
                                    "paleturquoise",
                                    "palevioletred",
                                    "papayawhip",
                                    "peachpuff",
                                    "peru",
                                    "pink",
                                    "plum",
                                    "powderblue",
                                    "purple",
                                    "red",
                                    "rosybrown",
                                    "royalblue",
                                    "saddlebrown",
                                    "salmon",
                                    "sandybrown",
                                    "seagreen",
                                    "seashell",
                                    "sienna",
                                    "silver",
                                    "skyblue",
                                    "slateblue",
                                    "slategray",
                                    "slategrey",
                                    "snow",
                                    "springgreen",
                                    "steelblue",
                                    "tan",
                                    "teal",
                                    "thistle",
                                    "tomato",
                                    "turquoise",
                                    "violet",
                                    "wheat",
                                    "white",
                                    "whitesmoke",
                                    "yellow",
                                    "yellowgreen"
                                ],
                                "translation_key": "color_name"
                            }
                        }
                    },
                    "color_temp": {
                        "advanced": true,
                        "description": "Color temperature in mireds.",
                        "filter": {
                            "attribute": {
                                "supported_color_modes": [
                                    "color_temp",
                                    "hs",
                                    "xy",
                                    "rgb",
                                    "rgbw",
                                    "rgbww"
                                ]
                            }
                        },
                        "name": "Color temperature",
                        "selector": {
                            "color_temp": null
                        }
                    },
                    "effect": {
                        "description": "Light effect.",
                        "filter": {
                            "supported_features": [
                                4
                            ]
                        },
                        "name": "Effect",
                        "selector": {
                            "text": null
                        }
                    },
                    "flash": {
                        "advanced": true,
                        "description": "Tell light to flash, can be either value short or long.",
                        "filter": {
                            "supported_features": [
                                8
                            ]
                        },
                        "name": "Flash",
                        "selector": {
                            "select": {
                                "options": [
                                    {
                                        "label": "Long",
                                        "value": "long"
                                    },
                                    {
                                        "label": "Short",
                                        "value": "short"
                                    }
                                ]
                            }
                        }
                    },
                    "hs_color": {
                        "advanced": true,
                        "description": "Color in hue/sat format. A list of two integers. Hue is 0-360 and Sat is 0-100.",
                        "example": "[300, 70]",
                        "filter": {
                            "attribute": {
                                "supported_color_modes": [
                                    "hs",
                                    "xy",
                                    "rgb",
                                    "rgbw",
                                    "rgbww"
                                ]
                            }
                        },
                        "name": "Hue/Sat color",
                        "selector": {
                            "object": null
                        }
                    },
                    "kelvin": {
                        "advanced": true,
                        "description": "Color temperature in Kelvin.",
                        "filter": {
                            "attribute": {
                                "supported_color_modes": [
                                    "color_temp",
                                    "hs",
                                    "xy",
                                    "rgb",
                                    "rgbw",
                                    "rgbww"
                                ]
                            }
                        },
                        "name": "Color temperature",
                        "selector": {
                            "color_temp": {
                                "max": 6500,
                                "min": 2000,
                                "unit": "kelvin"
                            }
                        }
                    },
                    "profile": {
                        "advanced": true,
                        "description": "Name of a light profile to use.",
                        "example": "relax",
                        "name": "Profile",
                        "selector": {
                            "text": null
                        }
                    },
                    "rgb_color": {
                        "advanced": true,
                        "description": "The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue.",
                        "example": "[255, 100, 100]",
                        "filter": {
                            "attribute": {
                                "supported_color_modes": [
                                    "hs",
                                    "xy",
                                    "rgb",
                                    "rgbw",
                                    "rgbww"
                                ]
                            }
                        },
                        "name": "Color",
                        "selector": {
                            "color_rgb": null
                        }
                    },
                    "transition": {
                        "description": "Duration it takes to get to next state.",
                        "filter": {
                            "supported_features": [
                                32
                            ]
                        },
                        "name": "Transition",
                        "selector": {
                            "number": {
                                "max": 300,
                                "min": 0,
                                "unit_of_measurement": "seconds"
                            }
                        }
                    },
                    "white": {
                        "advanced": true,
                        "description": "Set the light to white mode.",
                        "filter": {
                            "attribute": {
                                "supported_color_modes": [
                                    "white"
                                ]
                            }
                        },
                        "name": "White",
                        "selector": {
                            "constant": {
                                "label": "Enabled",
                                "value": true
                            }
                        }
                    },
                    "xy_color": {
                        "advanced": true,
                        "description": "Color in XY-format. A list of two decimal numbers between 0 and 1.",
                        "example": "[0.52, 0.43]",
                        "filter": {
                            "attribute": {
                                "supported_color_modes": [
                                    "hs",
                                    "xy",
                                    "rgb",
                                    "rgbw",
                                    "rgbww"
                                ]
                            }
                        },
                        "name": "XY-color",
                        "selector": {
                            "object": null
                        }
                    }
                },
                "name": "Toggle",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "light"
                            ]
                        }
                    ]
                }
            },
            "turn_off": {
                "description": "Turn off one or more lights.",
                "fields": {
                    "flash": {
                        "advanced": true,
                        "description": "Tell light to flash, can be either value short or long.",
                        "filter": {
                            "supported_features": [
                                8
                            ]
                        },
                        "name": "Flash",
                        "selector": {
                            "select": {
                                "options": [
                                    {
                                        "label": "Long",
                                        "value": "long"
                                    },
                                    {
                                        "label": "Short",
                                        "value": "short"
                                    }
                                ]
                            }
                        }
                    },
                    "transition": {
                        "description": "Duration it takes to get to next state.",
                        "filter": {
                            "supported_features": [
                                32
                            ]
                        },
                        "name": "Transition",
                        "selector": {
                            "number": {
                                "max": 300,
                                "min": 0,
                                "unit_of_measurement": "seconds"
                            }
                        }
                    }
                },
                "name": "Turn off",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "light"
                            ]
                        }
                    ]
                }
            },
            "turn_on": {
                "description": "Turn on one or more lights and adjust properties of the light, even when they are turned on already.",
                "fields": {
                    "brightness": {
                        "advanced": true,
                        "description": "Number indicating brightness, where 0 turns the light off, 1 is the minimum brightness, and 255 is the maximum brightness.",
                        "filter": {
                            "attribute": {
                                "supported_color_modes": [
                                    "brightness",
                                    "color_temp",
                                    "hs",
                                    "xy",
                                    "rgb",
                                    "rgbw",
                                    "rgbww"
                                ]
                            }
                        },
                        "name": "Brightness value",
                        "selector": {
                            "number": {
                                "max": 255,
                                "min": 0
                            }
                        }
                    },
                    "brightness_pct": {
                        "description": "Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness.",
                        "filter": {
                            "attribute": {
                                "supported_color_modes": [
                                    "brightness",
                                    "color_temp",
                                    "hs",
                                    "xy",
                                    "rgb",
                                    "rgbw",
                                    "rgbww"
                                ]
                            }
                        },
                        "name": "Brightness",
                        "selector": {
                            "number": {
                                "max": 100,
                                "min": 0,
                                "unit_of_measurement": "%"
                            }
                        }
                    },
                    "brightness_step": {
                        "advanced": true,
                        "description": "Change brightness by an amount.",
                        "filter": {
                            "attribute": {
                                "supported_color_modes": [
                                    "brightness",
                                    "color_temp",
                                    "hs",
                                    "xy",
                                    "rgb",
                                    "rgbw",
                                    "rgbww"
                                ]
                            }
                        },
                        "name": "Brightness step value",
                        "selector": {
                            "number": {
                                "max": 255,
                                "min": -225
                            }
                        }
                    },
                    "brightness_step_pct": {
                        "description": "Change brightness by a percentage.",
                        "filter": {
                            "attribute": {
                                "supported_color_modes": [
                                    "brightness",
                                    "color_temp",
                                    "hs",
                                    "xy",
                                    "rgb",
                                    "rgbw",
                                    "rgbww"
                                ]
                            }
                        },
                        "name": "Brightness step",
                        "selector": {
                            "number": {
                                "max": 100,
                                "min": -100,
                                "unit_of_measurement": "%"
                            }
                        }
                    },
                    "color_name": {
                        "advanced": true,
                        "description": "A human-readable color name.",
                        "filter": {
                            "attribute": {
                                "supported_color_modes": [
                                    "hs",
                                    "xy",
                                    "rgb",
                                    "rgbw",
                                    "rgbww"
                                ]
                            }
                        },
                        "name": "Color name",
                        "selector": {
                            "select": {
                                "options": [
                                    "homeassistant",
                                    "aliceblue",
                                    "antiquewhite",
                                    "aqua",
                                    "aquamarine",
                                    "azure",
                                    "beige",
                                    "bisque",
                                    "blanchedalmond",
                                    "blue",
                                    "blueviolet",
                                    "brown",
                                    "burlywood",
                                    "cadetblue",
                                    "chartreuse",
                                    "chocolate",
                                    "coral",
                                    "cornflowerblue",
                                    "cornsilk",
                                    "crimson",
                                    "cyan",
                                    "darkblue",
                                    "darkcyan",
                                    "darkgoldenrod",
                                    "darkgray",
                                    "darkgreen",
                                    "darkgrey",
                                    "darkkhaki",
                                    "darkmagenta",
                                    "darkolivegreen",
                                    "darkorange",
                                    "darkorchid",
                                    "darkred",
                                    "darksalmon",
                                    "darkseagreen",
                                    "darkslateblue",
                                    "darkslategray",
                                    "darkslategrey",
                                    "darkturquoise",
                                    "darkviolet",
                                    "deeppink",
                                    "deepskyblue",
                                    "dimgray",
                                    "dimgrey",
                                    "dodgerblue",
                                    "firebrick",
                                    "floralwhite",
                                    "forestgreen",
                                    "fuchsia",
                                    "gainsboro",
                                    "ghostwhite",
                                    "gold",
                                    "goldenrod",
                                    "gray",
                                    "green",
                                    "greenyellow",
                                    "grey",
                                    "honeydew",
                                    "hotpink",
                                    "indianred",
                                    "indigo",
                                    "ivory",
                                    "khaki",
                                    "lavender",
                                    "lavenderblush",
                                    "lawngreen",
                                    "lemonchiffon",
                                    "lightblue",
                                    "lightcoral",
                                    "lightcyan",
                                    "lightgoldenrodyellow",
                                    "lightgray",
                                    "lightgreen",
                                    "lightgrey",
                                    "lightpink",
                                    "lightsalmon",
                                    "lightseagreen",
                                    "lightskyblue",
                                    "lightslategray",
                                    "lightslategrey",
                                    "lightsteelblue",
                                    "lightyellow",
                                    "lime",
                                    "limegreen",
                                    "linen",
                                    "magenta",
                                    "maroon",
                                    "mediumaquamarine",
                                    "mediumblue",
                                    "mediumorchid",
                                    "mediumpurple",
                                    "mediumseagreen",
                                    "mediumslateblue",
                                    "mediumspringgreen",
                                    "mediumturquoise",
                                    "mediumvioletred",
                                    "midnightblue",
                                    "mintcream",
                                    "mistyrose",
                                    "moccasin",
                                    "navajowhite",
                                    "navy",
                                    "navyblue",
                                    "oldlace",
                                    "olive",
                                    "olivedrab",
                                    "orange",
                                    "orangered",
                                    "orchid",
                                    "palegoldenrod",
                                    "palegreen",
                                    "paleturquoise",
                                    "palevioletred",
                                    "papayawhip",
                                    "peachpuff",
                                    "peru",
                                    "pink",
                                    "plum",
                                    "powderblue",
                                    "purple",
                                    "red",
                                    "rosybrown",
                                    "royalblue",
                                    "saddlebrown",
                                    "salmon",
                                    "sandybrown",
                                    "seagreen",
                                    "seashell",
                                    "sienna",
                                    "silver",
                                    "skyblue",
                                    "slateblue",
                                    "slategray",
                                    "slategrey",
                                    "snow",
                                    "springgreen",
                                    "steelblue",
                                    "tan",
                                    "teal",
                                    "thistle",
                                    "tomato",
                                    "turquoise",
                                    "violet",
                                    "wheat",
                                    "white",
                                    "whitesmoke",
                                    "yellow",
                                    "yellowgreen"
                                ],
                                "translation_key": "color_name"
                            }
                        }
                    },
                    "color_temp": {
                        "description": "Color temperature in mireds.",
                        "filter": {
                            "attribute": {
                                "supported_color_modes": [
                                    "color_temp",
                                    "hs",
                                    "xy",
                                    "rgb",
                                    "rgbw",
                                    "rgbww"
                                ]
                            }
                        },
                        "name": "Color temperature",
                        "selector": {
                            "color_temp": {
                                "max": 500,
                                "min": 153,
                                "unit": "mired"
                            }
                        }
                    },
                    "effect": {
                        "description": "Light effect.",
                        "filter": {
                            "supported_features": [
                                4
                            ]
                        },
                        "name": "Effect",
                        "selector": {
                            "text": null
                        }
                    },
                    "flash": {
                        "advanced": true,
                        "description": "Tell light to flash, can be either value short or long.",
                        "filter": {
                            "supported_features": [
                                8
                            ]
                        },
                        "name": "Flash",
                        "selector": {
                            "select": {
                                "options": [
                                    {
                                        "label": "Long",
                                        "value": "long"
                                    },
                                    {
                                        "label": "Short",
                                        "value": "short"
                                    }
                                ]
                            }
                        }
                    },
                    "hs_color": {
                        "advanced": true,
                        "description": "Color in hue/sat format. A list of two integers. Hue is 0-360 and Sat is 0-100.",
                        "example": "[300, 70]",
                        "filter": {
                            "attribute": {
                                "supported_color_modes": [
                                    "hs",
                                    "xy",
                                    "rgb",
                                    "rgbw",
                                    "rgbww"
                                ]
                            }
                        },
                        "name": "Hue/Sat color",
                        "selector": {
                            "object": null
                        }
                    },
                    "kelvin": {
                        "advanced": true,
                        "description": "Color temperature in Kelvin.",
                        "filter": {
                            "attribute": {
                                "supported_color_modes": [
                                    "color_temp",
                                    "hs",
                                    "xy",
                                    "rgb",
                                    "rgbw",
                                    "rgbww"
                                ]
                            }
                        },
                        "name": "Color temperature",
                        "selector": {
                            "color_temp": {
                                "max": 6500,
                                "min": 2000,
                                "unit": "kelvin"
                            }
                        }
                    },
                    "profile": {
                        "advanced": true,
                        "description": "Name of a light profile to use.",
                        "example": "relax",
                        "name": "Profile",
                        "selector": {
                            "text": null
                        }
                    },
                    "rgb_color": {
                        "description": "The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue.",
                        "filter": {
                            "attribute": {
                                "supported_color_modes": [
                                    "hs",
                                    "xy",
                                    "rgb",
                                    "rgbw",
                                    "rgbww"
                                ]
                            }
                        },
                        "name": "Color",
                        "selector": {
                            "color_rgb": null
                        }
                    },
                    "rgbw_color": {
                        "advanced": true,
                        "description": "The color in RGBW format. A list of four integers between 0 and 255 representing the values of red, green, blue, and white.",
                        "example": "[255, 100, 100, 50]",
                        "filter": {
                            "attribute": {
                                "supported_color_modes": [
                                    "hs",
                                    "xy",
                                    "rgb",
                                    "rgbw",
                                    "rgbww"
                                ]
                            }
                        },
                        "name": "RGBW-color",
                        "selector": {
                            "object": null
                        }
                    },
                    "rgbww_color": {
                        "advanced": true,
                        "description": "The color in RGBWW format. A list of five integers between 0 and 255 representing the values of red, green, blue, cold white, and warm white.",
                        "example": "[255, 100, 100, 50, 70]",
                        "filter": {
                            "attribute": {
                                "supported_color_modes": [
                                    "hs",
                                    "xy",
                                    "rgb",
                                    "rgbw",
                                    "rgbww"
                                ]
                            }
                        },
                        "name": "RGBWW-color",
                        "selector": {
                            "object": null
                        }
                    },
                    "transition": {
                        "description": "Duration it takes to get to next state.",
                        "filter": {
                            "supported_features": [
                                32
                            ]
                        },
                        "name": "Transition",
                        "selector": {
                            "number": {
                                "max": 300,
                                "min": 0,
                                "unit_of_measurement": "seconds"
                            }
                        }
                    },
                    "white": {
                        "advanced": true,
                        "description": "Set the light to white mode.",
                        "filter": {
                            "attribute": {
                                "supported_color_modes": [
                                    "white"
                                ]
                            }
                        },
                        "name": "White",
                        "selector": {
                            "constant": {
                                "label": "Enabled",
                                "value": true
                            }
                        }
                    },
                    "xy_color": {
                        "advanced": true,
                        "description": "Color in XY-format. A list of two decimal numbers between 0 and 1.",
                        "example": "[0.52, 0.43]",
                        "filter": {
                            "attribute": {
                                "supported_color_modes": [
                                    "hs",
                                    "xy",
                                    "rgb",
                                    "rgbw",
                                    "rgbww"
                                ]
                            }
                        },
                        "name": "XY-color",
                        "selector": {
                            "object": null
                        }
                    }
                },
                "name": "Turn on",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "light"
                            ]
                        }
                    ]
                }
            }
        },
        "lock": {
            "lock": {
                "description": "Locks a lock.",
                "fields": {
                    "code": {
                        "description": "Code used to lock the lock.",
                        "example": 1234,
                        "name": "Code",
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Lock",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "lock"
                            ]
                        }
                    ]
                }
            },
            "open": {
                "description": "Opens a lock.",
                "fields": {
                    "code": {
                        "description": "Code used to open the lock.",
                        "example": 1234,
                        "name": "Code",
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Open",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "lock"
                            ],
                            "supported_features": [
                                1
                            ]
                        }
                    ]
                }
            },
            "unlock": {
                "description": "Unlocks a lock.",
                "fields": {
                    "code": {
                        "description": "Code used to unlock the lock.",
                        "example": 1234,
                        "name": "Code",
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Unlock",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "lock"
                            ]
                        }
                    ]
                }
            }
        },
        "logbook": {
            "log": {
                "description": "Creates a custom entry in the logbook.",
                "fields": {
                    "domain": {
                        "description": "Determines which icon is used in the logbook entry. The icon illustrates the integration domain related to this logbook entry.",
                        "example": "light",
                        "name": "Domain",
                        "selector": {
                            "text": null
                        }
                    },
                    "entity_id": {
                        "description": "Entity to reference in the logbook entry.",
                        "name": "Entity ID",
                        "selector": {
                            "entity": null
                        }
                    },
                    "message": {
                        "description": "Message of the logbook entry.",
                        "example": "is being used",
                        "name": "Message",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    },
                    "name": {
                        "description": "Custom name for an entity, can be referenced using an `entity_id`.",
                        "example": "Kitchen",
                        "name": "Name",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Log"
            }
        },
        "logger": {
            "set_default_level": {
                "description": "Sets the default log level for integrations.",
                "fields": {
                    "level": {
                        "description": "Default severity level for all integrations.",
                        "name": "Level",
                        "selector": {
                            "select": {
                                "options": [
                                    "debug",
                                    "info",
                                    "warning",
                                    "error",
                                    "fatal",
                                    "critical"
                                ],
                                "translation_key": "level"
                            }
                        }
                    }
                },
                "name": "Set default level"
            },
            "set_level": {
                "description": "Sets the log level for one or more integrations.",
                "fields": {},
                "name": "Set level"
            }
        },
        "media_player": {
            "clear_playlist": {
                "description": "Clears the playlist.",
                "fields": {},
                "name": "Clear playlist",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "media_player"
                            ],
                            "supported_features": [
                                8192
                            ]
                        }
                    ]
                }
            },
            "join": {
                "description": "Groups media players together for synchronous playback. Only works on supported multiroom audio systems.",
                "fields": {
                    "group_members": {
                        "description": "The players which will be synced with the playback specified in `target`.",
                        "example": "- media_player.multiroom_player2\n- media_player.multiroom_player3\n",
                        "name": "Group members",
                        "required": true,
                        "selector": {
                            "entity": {
                                "domain": "media_player",
                                "multiple": true
                            }
                        }
                    }
                },
                "name": "Join",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "media_player"
                            ],
                            "supported_features": [
                                524288
                            ]
                        }
                    ]
                }
            },
            "media_next_track": {
                "description": "Selects the next track.",
                "fields": {},
                "name": "Next",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "media_player"
                            ],
                            "supported_features": [
                                32
                            ]
                        }
                    ]
                }
            },
            "media_pause": {
                "description": "Pauses.",
                "fields": {},
                "name": "Pause",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "media_player"
                            ],
                            "supported_features": [
                                1
                            ]
                        }
                    ]
                }
            },
            "media_play": {
                "description": "Starts playing.",
                "fields": {},
                "name": "Play",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "media_player"
                            ],
                            "supported_features": [
                                16384
                            ]
                        }
                    ]
                }
            },
            "media_play_pause": {
                "description": "Toggles play/pause.",
                "fields": {},
                "name": "Play/Pause",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "media_player"
                            ],
                            "supported_features": [
                                16385
                            ]
                        }
                    ]
                }
            },
            "media_previous_track": {
                "description": "Selects the previous track.",
                "fields": {},
                "name": "Previous",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "media_player"
                            ],
                            "supported_features": [
                                16
                            ]
                        }
                    ]
                }
            },
            "media_seek": {
                "description": "Allows you to go to a different part of the media that is currently playing.",
                "fields": {
                    "seek_position": {
                        "description": "Target position in the currently playing media. The format is platform dependent.",
                        "name": "Position",
                        "required": true,
                        "selector": {
                            "number": {
                                "max": 9223372036854775807,
                                "min": 0,
                                "mode": "box",
                                "step": 0.01
                            }
                        }
                    }
                },
                "name": "Seek",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "media_player"
                            ],
                            "supported_features": [
                                2
                            ]
                        }
                    ]
                }
            },
            "media_stop": {
                "description": "Stops playing.",
                "fields": {},
                "name": "Stop",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "media_player"
                            ],
                            "supported_features": [
                                4096
                            ]
                        }
                    ]
                }
            },
            "play_media": {
                "description": "Starts playing specified media.",
                "fields": {
                    "announce": {
                        "description": "If the media should be played as an announcement.",
                        "example": "true",
                        "filter": {
                            "supported_features": [
                                1048576
                            ]
                        },
                        "name": "Announce",
                        "required": false,
                        "selector": {
                            "boolean": null
                        }
                    },
                    "enqueue": {
                        "description": "If the content should be played now or be added to the queue.",
                        "filter": {
                            "supported_features": [
                                2097152
                            ]
                        },
                        "name": "Enqueue",
                        "required": false,
                        "selector": {
                            "select": {
                                "options": [
                                    "play",
                                    "next",
                                    "add",
                                    "replace"
                                ],
                                "translation_key": "enqueue"
                            }
                        }
                    },
                    "media_content_id": {
                        "description": "The ID of the content to play. Platform dependent.",
                        "example": "https://home-assistant.io/images/cast/splash.png",
                        "name": "Content ID",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    },
                    "media_content_type": {
                        "description": "The type of the content to play. Such as image, music, tv show, video, episode, channel, or playlist.",
                        "example": "music",
                        "name": "Content type",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Play media",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "media_player"
                            ],
                            "supported_features": [
                                512
                            ]
                        }
                    ]
                }
            },
            "repeat_set": {
                "description": "Playback mode that plays the media in a loop.",
                "fields": {
                    "repeat": {
                        "description": "Repeat mode to set.",
                        "name": "Repeat mode",
                        "required": true,
                        "selector": {
                            "select": {
                                "options": [
                                    "off",
                                    "all",
                                    "one"
                                ],
                                "translation_key": "repeat"
                            }
                        }
                    }
                },
                "name": "Repeat",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "media_player"
                            ],
                            "supported_features": [
                                262144
                            ]
                        }
                    ]
                }
            },
            "select_sound_mode": {
                "description": "Selects a specific sound mode.",
                "fields": {
                    "sound_mode": {
                        "description": "Name of the sound mode to switch to.",
                        "example": "Music",
                        "name": "Sound mode",
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Select sound mode",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "media_player"
                            ],
                            "supported_features": [
                                65536
                            ]
                        }
                    ]
                }
            },
            "select_source": {
                "description": "Sends the media player the command to change input source.",
                "fields": {
                    "source": {
                        "description": "Name of the source to switch to. Platform dependent.",
                        "example": "video1",
                        "name": "Source",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Select source",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "media_player"
                            ],
                            "supported_features": [
                                2048
                            ]
                        }
                    ]
                }
            },
            "shuffle_set": {
                "description": "Playback mode that selects the media in randomized order.",
                "fields": {
                    "shuffle": {
                        "description": "Whether or not shuffle mode is enabled.",
                        "name": "Shuffle",
                        "required": true,
                        "selector": {
                            "boolean": null
                        }
                    }
                },
                "name": "Shuffle",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "media_player"
                            ],
                            "supported_features": [
                                32768
                            ]
                        }
                    ]
                }
            },
            "toggle": {
                "description": "Toggles a media player on/off.",
                "fields": {},
                "name": "Toggle",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "media_player"
                            ],
                            "supported_features": [
                                384
                            ]
                        }
                    ]
                }
            },
            "turn_off": {
                "description": "Turns off the power of the media player.",
                "fields": {},
                "name": "Turn off",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "media_player"
                            ],
                            "supported_features": [
                                256
                            ]
                        }
                    ]
                }
            },
            "turn_on": {
                "description": "Turns on the power of the media player.",
                "fields": {},
                "name": "Turn on",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "media_player"
                            ],
                            "supported_features": [
                                128
                            ]
                        }
                    ]
                }
            },
            "unjoin": {
                "description": "Removes the player from a group. Only works on platforms which support player groups.",
                "fields": {},
                "name": "Unjoin",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "media_player"
                            ],
                            "supported_features": [
                                524288
                            ]
                        }
                    ]
                }
            },
            "volume_down": {
                "description": "Turns down the volume.",
                "fields": {},
                "name": "Turn down volume",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "media_player"
                            ],
                            "supported_features": [
                                4,
                                1024
                            ]
                        }
                    ]
                }
            },
            "volume_mute": {
                "description": "Mutes or unmutes the media player.",
                "fields": {
                    "is_volume_muted": {
                        "description": "Defines whether or not it is muted.",
                        "name": "Muted",
                        "required": true,
                        "selector": {
                            "boolean": null
                        }
                    }
                },
                "name": "Mute/unmute volume",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "media_player"
                            ],
                            "supported_features": [
                                8
                            ]
                        }
                    ]
                }
            },
            "volume_set": {
                "description": "Sets the volume level.",
                "fields": {
                    "volume_level": {
                        "description": "The volume. 0 is inaudible, 1 is the maximum volume.",
                        "name": "Level",
                        "required": true,
                        "selector": {
                            "number": {
                                "max": 1,
                                "min": 0,
                                "step": 0.01
                            }
                        }
                    }
                },
                "name": "Set volume",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "media_player"
                            ],
                            "supported_features": [
                                4
                            ]
                        }
                    ]
                }
            },
            "volume_up": {
                "description": "Turns up the volume.",
                "fields": {},
                "name": "Turn up volume",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "media_player"
                            ],
                            "supported_features": [
                                4,
                                1024
                            ]
                        }
                    ]
                }
            }
        },
        "notify": {
            "demo_test_target_name": {
                "description": "Sends a notification message using the demo_test_target_name integration.",
                "fields": {
                    "data": {
                        "example": "platform specific",
                        "selector": {
                            "object": null
                        }
                    },
                    "message": {
                        "example": "The garage door has been open for 10 minutes.",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    },
                    "target": {
                        "example": "platform specific",
                        "selector": {
                            "object": null
                        }
                    },
                    "title": {
                        "example": "Your Garage Door Friend",
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Send a notification via demo_test_target_name"
            },
            "notify": {
                "description": "Sends a notification message using the notify service.",
                "fields": {
                    "data": {
                        "example": "platform specific",
                        "selector": {
                            "object": null
                        }
                    },
                    "message": {
                        "example": "The garage door has been open for 10 minutes.",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    },
                    "target": {
                        "example": "platform specific",
                        "selector": {
                            "object": null
                        }
                    },
                    "title": {
                        "example": "Your Garage Door Friend",
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Send a notification with notify"
            },
            "persistent_notification": {
                "description": "Sends a notification that is visible in the **Notifications** panel.",
                "fields": {
                    "data": {
                        "description": "Some integrations provide extended functionality. For information on how to use _data_, refer to the integration documentation..",
                        "example": "platform specific",
                        "name": "Data",
                        "selector": {
                            "object": null
                        }
                    },
                    "message": {
                        "description": "Message body of the notification.",
                        "example": "The garage door has been open for 10 minutes.",
                        "name": "Message",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    },
                    "title": {
                        "description": "Title of the notification.",
                        "example": "Your Garage Door Friend",
                        "name": "Title",
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Send a persistent notification"
            }
        },
        "number": {
            "set_value": {
                "description": "Sets the value of a number.",
                "fields": {
                    "value": {
                        "description": "The target value to set.",
                        "example": 42,
                        "name": "Value",
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Set",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "number"
                            ]
                        }
                    ]
                }
            }
        },
        "persistent_notification": {
            "create": {
                "description": "Shows a notification on the **Notifications** panel.",
                "fields": {
                    "message": {
                        "description": "Message body of the notification.",
                        "example": "Please check your configuration.yaml.",
                        "name": "Message",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    },
                    "notification_id": {
                        "description": "ID of the notification. This new notification will overwrite an existing notification with the same ID.",
                        "example": 1234,
                        "name": "Notification ID",
                        "selector": {
                            "text": null
                        }
                    },
                    "title": {
                        "description": "Optional title of the notification.",
                        "example": "Test notification",
                        "name": "Title",
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Create"
            },
            "dismiss": {
                "description": "Removes a notification from the **Notifications** panel.",
                "fields": {
                    "notification_id": {
                        "description": "ID of the notification to be removed.",
                        "example": 1234,
                        "name": "Notification ID",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Dismiss"
            },
            "dismiss_all": {
                "description": "Removes all notifications from the **Notifications** panel.",
                "fields": {},
                "name": "Dismiss all"
            }
        },
        "person": {
            "reload": {
                "description": "Reloads persons from the YAML-configuration.",
                "fields": {},
                "name": "Reload"
            }
        },
        "recorder": {
            "disable": {
                "description": "Stops the recording of events and state changes.",
                "fields": {},
                "name": "Disable"
            },
            "enable": {
                "description": "Starts the recording of events and state changes.",
                "fields": {},
                "name": "Enable"
            },
            "purge": {
                "description": "Starts purge task - to clean up old data from your database.",
                "fields": {
                    "apply_filter": {
                        "default": false,
                        "description": "Apply `entity_id` and `event_type` filters in addition to time-based purge.",
                        "name": "Apply filter",
                        "selector": {
                            "boolean": null
                        }
                    },
                    "keep_days": {
                        "description": "Number of days to keep the data in the database. Starting today, counting backward. A value of `7` means that everything older than a week will be purged.",
                        "name": "Days to keep",
                        "selector": {
                            "number": {
                                "max": 365,
                                "min": 0,
                                "unit_of_measurement": "days"
                            }
                        }
                    },
                    "repack": {
                        "default": false,
                        "description": "Attempt to save disk space by rewriting the entire database file.",
                        "name": "Repack",
                        "selector": {
                            "boolean": null
                        }
                    }
                },
                "name": "Purge"
            },
            "purge_entities": {
                "description": "Starts a purge task to remove the data related to specific entities from your database.",
                "fields": {
                    "domains": {
                        "default": [],
                        "description": "List of domains for which the data needs to be removed from the recorder database.",
                        "example": "sun",
                        "name": "Domains to remove",
                        "required": false,
                        "selector": {
                            "object": null
                        }
                    },
                    "entity_globs": {
                        "default": [],
                        "description": "List of glob patterns used to select the entities for which the data is to be removed from the recorder database.",
                        "example": "domain*.object_id*",
                        "name": "Entity globs to remove",
                        "required": false,
                        "selector": {
                            "object": null
                        }
                    },
                    "keep_days": {
                        "default": 0,
                        "description": "Number of days to keep the data for rows matching the filter. Starting today, counting backward. A value of `7` means that everything older than a week will be purged. The default of 0 days will remove all matching rows immediately.",
                        "name": "Days to keep",
                        "selector": {
                            "number": {
                                "max": 365,
                                "min": 0,
                                "unit_of_measurement": "days"
                            }
                        }
                    }
                },
                "name": "Purge entities",
                "target": {
                    "entity": [
                        {}
                    ]
                }
            }
        },
        "scene": {
            "apply": {
                "description": "Activates a scene with configuration.",
                "fields": {
                    "entities": {
                        "description": "List of entities and their target state.",
                        "example": "light.kitchen: \"on\"\nlight.ceiling:\n  state: \"on\"\n  brightness: 80\n",
                        "name": "Entities state",
                        "required": true,
                        "selector": {
                            "object": null
                        }
                    },
                    "transition": {
                        "description": "Time it takes the devices to transition into the states defined in the scene.",
                        "name": "Transition",
                        "selector": {
                            "number": {
                                "max": 300,
                                "min": 0,
                                "unit_of_measurement": "seconds"
                            }
                        }
                    }
                },
                "name": "Apply"
            },
            "create": {
                "description": "Creates a new scene.",
                "fields": {
                    "entities": {
                        "advanced": true,
                        "description": "List of entities and their target state. If your entities are already in the target state right now, use `snapshot_entities` instead.",
                        "example": "light.tv_back_light: \"on\"\nlight.ceiling:\n  state: \"on\"\n  brightness: 200\n",
                        "name": "Entities state",
                        "selector": {
                            "object": null
                        }
                    },
                    "scene_id": {
                        "description": "The entity ID of the new scene.",
                        "example": "all_lights",
                        "name": "Scene entity ID",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    },
                    "snapshot_entities": {
                        "description": "List of entities to be included in the snapshot. By taking a snapshot, you record the current state of those entities. If you do not want to use the current state of all your entities for this scene, you can combine the `snapshot_entities` with `entities`.",
                        "example": "- light.ceiling\n- light.kitchen\n",
                        "name": "Snapshot entities",
                        "selector": {
                            "entity": {
                                "multiple": true
                            }
                        }
                    }
                },
                "name": "Create"
            },
            "delete": {
                "description": "Deletes a dynamically created scene.",
                "fields": {},
                "name": "Delete",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "scene"
                            ],
                            "integration": "homeassistant"
                        }
                    ]
                }
            },
            "reload": {
                "description": "Reloads the scenes from the YAML-configuration.",
                "fields": {},
                "name": "Reload"
            },
            "turn_on": {
                "description": "Activates a scene.",
                "fields": {
                    "transition": {
                        "description": "Time it takes the devices to transition into the states defined in the scene.",
                        "name": "Transition",
                        "selector": {
                            "number": {
                                "max": 300,
                                "min": 0,
                                "unit_of_measurement": "seconds"
                            }
                        }
                    }
                },
                "name": "Activate",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "scene"
                            ]
                        }
                    ]
                }
            }
        },
        "schedule": {
            "reload": {
                "description": "Reloads schedules from the YAML-configuration.",
                "fields": {},
                "name": "Reload"
            }
        },
        "script": {
            "reload": {
                "description": "Reloads all the available scripts.",
                "fields": {},
                "name": "Reload"
            },
            "toggle": {
                "description": "Toggle a script. Starts it, if isn't running, stops it otherwise.",
                "fields": {},
                "name": "Toggle",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "script"
                            ]
                        }
                    ]
                }
            },
            "turn_off": {
                "description": "Stops a running script.",
                "fields": {},
                "name": "Turn off",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "script"
                            ]
                        }
                    ]
                }
            },
            "turn_on": {
                "description": "Runs the sequence of actions defined in a script.",
                "fields": {},
                "name": "Turn on",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "script"
                            ]
                        }
                    ]
                }
            }
        },
        "select": {
            "select_first": {
                "description": "Selects the first option.",
                "fields": {},
                "name": "First",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "select"
                            ]
                        }
                    ]
                }
            },
            "select_last": {
                "description": "Selects the last option.",
                "fields": {},
                "name": "Last",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "select"
                            ]
                        }
                    ]
                }
            },
            "select_next": {
                "description": "Selects the next option.",
                "fields": {
                    "cycle": {
                        "default": true,
                        "description": "If the option should cycle from the last to the first.",
                        "name": "Cycle",
                        "selector": {
                            "boolean": null
                        }
                    }
                },
                "name": "Next",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "select"
                            ]
                        }
                    ]
                }
            },
            "select_option": {
                "description": "Selects an option.",
                "fields": {
                    "option": {
                        "description": "Option to be selected.",
                        "example": "\"Item A\"",
                        "name": "Option",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Select",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "select"
                            ]
                        }
                    ]
                }
            },
            "select_previous": {
                "description": "Selects the previous option.",
                "fields": {
                    "cycle": {
                        "default": true,
                        "description": "If the option should cycle from the first to the last.",
                        "name": "Cycle",
                        "selector": {
                            "boolean": null
                        }
                    }
                },
                "name": "Previous",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "select"
                            ]
                        }
                    ]
                }
            }
        },
        "shopping_list": {
            "add_item": {
                "description": "Adds an item to the shopping list.",
                "fields": {
                    "name": {
                        "description": "The name of the item to add.",
                        "example": "Beer",
                        "name": "Name",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Add item"
            },
            "clear_completed_items": {
                "description": "Clears completed items from the shopping list.",
                "fields": {},
                "name": "Clear completed items"
            },
            "complete_all": {
                "description": "Marks all items as completed in the shopping list (without removing them from the list).",
                "fields": {},
                "name": "Complete all"
            },
            "complete_item": {
                "description": "Marks the first item with matching name as completed in the shopping list.",
                "fields": {
                    "name": {
                        "description": "The name of the item to mark as completed (without removing).",
                        "example": "Beer",
                        "name": "Name",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Complete item"
            },
            "incomplete_all": {
                "description": "Marks all items as incomplete in the shopping list.",
                "fields": {},
                "name": "Incomplete all"
            },
            "incomplete_item": {
                "description": "Marks the first item with matching name as incomplete in the shopping list.",
                "fields": {
                    "name": {
                        "description": "The name of the item to mark as incomplete.",
                        "example": "Beer",
                        "name": "Name",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Incomplete item"
            },
            "remove_item": {
                "description": "Removes the first item with matching name from the shopping list.",
                "fields": {
                    "name": {
                        "description": "The name of the item to remove.",
                        "example": "Beer",
                        "name": "Name",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Remove item"
            },
            "sort": {
                "description": "Sorts all items by name in the shopping list.",
                "fields": {
                    "reverse": {
                        "default": false,
                        "description": "Whether to sort in reverse (descending) order.",
                        "name": "Sort reverse",
                        "selector": {
                            "boolean": null
                        }
                    }
                },
                "name": "Sort all items"
            }
        },
        "siren": {
            "toggle": {
                "description": "Toggles the siren on/off.",
                "fields": {},
                "name": "Toggle",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "siren"
                            ],
                            "supported_features": [
                                3
                            ]
                        }
                    ]
                }
            },
            "turn_off": {
                "description": "Turns the siren off.",
                "fields": {},
                "name": "Turn off",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "siren"
                            ],
                            "supported_features": [
                                2
                            ]
                        }
                    ]
                }
            },
            "turn_on": {
                "description": "Turns the siren on.",
                "fields": {
                    "duration": {
                        "description": "Number of seconds the sound is played. Must be supported by the integration.",
                        "example": 15,
                        "filter": {
                            "supported_features": [
                                16
                            ]
                        },
                        "name": "Duration",
                        "required": false,
                        "selector": {
                            "text": null
                        }
                    },
                    "tone": {
                        "description": "The tone to emit. When `available_tones` property is a map, either the key or the value can be used. Must be supported by the integration.",
                        "example": "fire",
                        "filter": {
                            "supported_features": [
                                4
                            ]
                        },
                        "name": "Tone",
                        "required": false,
                        "selector": {
                            "text": null
                        }
                    },
                    "volume_level": {
                        "description": "The volume. 0 is inaudible, 1 is the maximum volume. Must be supported by the integration.",
                        "example": 0.5,
                        "filter": {
                            "supported_features": [
                                8
                            ]
                        },
                        "name": "Volume",
                        "required": false,
                        "selector": {
                            "number": {
                                "max": 1,
                                "min": 0,
                                "step": 0.05
                            }
                        }
                    }
                },
                "name": "Turn on",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "siren"
                            ],
                            "supported_features": [
                                1
                            ]
                        }
                    ]
                }
            }
        },
        "switch": {
            "toggle": {
                "description": "Toggles a switch on/off.",
                "fields": {},
                "name": "Toggle",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "switch"
                            ]
                        }
                    ]
                }
            },
            "turn_off": {
                "description": "Turns a switch off.",
                "fields": {},
                "name": "Turn off",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "switch"
                            ]
                        }
                    ]
                }
            },
            "turn_on": {
                "description": "Turns a switch on.",
                "fields": {},
                "name": "Turn on",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "switch"
                            ]
                        }
                    ]
                }
            }
        },
        "system_log": {
            "clear": {
                "description": "Clears all log entries.",
                "fields": {},
                "name": "Clear all"
            },
            "write": {
                "description": "Write log entry.",
                "fields": {
                    "level": {
                        "default": "error",
                        "description": "Log level.",
                        "name": "Level",
                        "selector": {
                            "select": {
                                "options": [
                                    "debug",
                                    "info",
                                    "warning",
                                    "error",
                                    "critical"
                                ],
                                "translation_key": "level"
                            }
                        }
                    },
                    "logger": {
                        "description": "Logger name under which to log the message. Defaults to `system_log.external`.",
                        "example": "mycomponent.myplatform",
                        "name": "Logger",
                        "selector": {
                            "text": null
                        }
                    },
                    "message": {
                        "description": "Message to log.",
                        "example": "Something went wrong",
                        "name": "Message",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Write"
            }
        },
        "text": {
            "set_value": {
                "description": "Sets the value.",
                "fields": {
                    "value": {
                        "description": "Enter your text.",
                        "example": "Hello world!",
                        "name": "Value",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Set value",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "text"
                            ]
                        }
                    ]
                }
            }
        },
        "time": {
            "set_value": {
                "description": "Sets the time.",
                "fields": {
                    "time": {
                        "description": "The time to set.",
                        "example": "22:15",
                        "name": "Time",
                        "required": true,
                        "selector": {
                            "time": null
                        }
                    }
                },
                "name": "Set Time",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "time"
                            ]
                        }
                    ]
                }
            }
        },
        "timer": {
            "cancel": {
                "description": "Cancels a timer.",
                "fields": {},
                "name": "Cancel",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "timer"
                            ]
                        }
                    ]
                }
            },
            "change": {
                "description": "Changes a timer.",
                "fields": {
                    "duration": {
                        "default": 0,
                        "description": "Duration to add or subtract to the running timer.",
                        "example": "00:01:00, 60 or -60",
                        "name": "Duration",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Change",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "timer"
                            ]
                        }
                    ]
                }
            },
            "finish": {
                "description": "Finishes a timer.",
                "fields": {},
                "name": "Finish",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "timer"
                            ]
                        }
                    ]
                }
            },
            "pause": {
                "description": "Pauses a timer.",
                "fields": {},
                "name": "Pause",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "timer"
                            ]
                        }
                    ]
                }
            },
            "reload": {
                "description": "Reloads timers from the YAML-configuration.",
                "fields": {},
                "name": "Reload"
            },
            "start": {
                "description": "Starts a timer.",
                "fields": {
                    "duration": {
                        "description": "Duration the timer requires to finish. [optional].",
                        "example": "00:01:00 or 60",
                        "name": "Duration",
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Start",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "timer"
                            ]
                        }
                    ]
                }
            }
        },
        "todo": {
            "add_item": {
                "description": "Add a new to-do list item.",
                "fields": {
                    "description": {
                        "description": "A more complete description of the to-do item than provided by the item name.",
                        "example": "A more complete description of the to-do item than that provided by the summary.",
                        "filter": {
                            "supported_features": [
                                64
                            ]
                        },
                        "name": "Description",
                        "selector": {
                            "text": null
                        }
                    },
                    "due_date": {
                        "description": "The date the to-do item is expected to be completed.",
                        "example": "2023-11-17",
                        "filter": {
                            "supported_features": [
                                16
                            ]
                        },
                        "name": "Due date",
                        "selector": {
                            "date": null
                        }
                    },
                    "due_datetime": {
                        "description": "The date and time the to-do item is expected to be completed.",
                        "example": "2023-11-17 13:30:00",
                        "filter": {
                            "supported_features": [
                                32
                            ]
                        },
                        "name": "Due date and time",
                        "selector": {
                            "datetime": null
                        }
                    },
                    "item": {
                        "description": "The name that represents the to-do item.",
                        "example": "Submit income tax return",
                        "name": "Item name",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Add to-do list item",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "todo"
                            ],
                            "supported_features": [
                                1
                            ]
                        }
                    ]
                }
            },
            "get_items": {
                "description": "Get items on a to-do list.",
                "fields": {
                    "status": {
                        "default": "needs_action",
                        "description": "Only return to-do items with the specified statuses. Returns not completed actions by default.",
                        "example": "needs_action",
                        "name": "Status",
                        "selector": {
                            "select": {
                                "multiple": true,
                                "options": [
                                    "needs_action",
                                    "completed"
                                ],
                                "translation_key": "status"
                            }
                        }
                    }
                },
                "name": "Get to-do list items",
                "response": {
                    "optional": false
                },
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "todo"
                            ]
                        }
                    ]
                }
            },
            "remove_completed_items": {
                "description": "Remove all to-do list items that have been completed.",
                "fields": {},
                "name": "Remove all completed to-do list items",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "todo"
                            ],
                            "supported_features": [
                                2
                            ]
                        }
                    ]
                }
            },
            "remove_item": {
                "description": "Remove an existing to-do list item by its name.",
                "fields": {
                    "item": {
                        "description": "The name for the to-do list items.",
                        "name": "Item name",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Remove a to-do list item",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "todo"
                            ],
                            "supported_features": [
                                2
                            ]
                        }
                    ]
                }
            },
            "update_item": {
                "description": "Update an existing to-do list item based on its name.",
                "fields": {
                    "description": {
                        "description": "A more complete description of the to-do item than provided by the item name.",
                        "example": "A more complete description of the to-do item than that provided by the summary.",
                        "filter": {
                            "supported_features": [
                                64
                            ]
                        },
                        "name": "Description",
                        "selector": {
                            "text": null
                        }
                    },
                    "due_date": {
                        "description": "The date the to-do item is expected to be completed.",
                        "example": "2023-11-17",
                        "filter": {
                            "supported_features": [
                                16
                            ]
                        },
                        "name": "Due date",
                        "selector": {
                            "date": null
                        }
                    },
                    "due_datetime": {
                        "description": "The date and time the to-do item is expected to be completed.",
                        "example": "2023-11-17 13:30:00",
                        "filter": {
                            "supported_features": [
                                32
                            ]
                        },
                        "name": "Due date and time",
                        "selector": {
                            "datetime": null
                        }
                    },
                    "item": {
                        "description": "The name for the to-do list item.",
                        "example": "Submit income tax return",
                        "name": "Item name",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    },
                    "rename": {
                        "description": "The new name of the to-do item",
                        "example": "Something else",
                        "name": "Rename item",
                        "selector": {
                            "text": null
                        }
                    },
                    "status": {
                        "description": "A status or confirmation of the to-do item.",
                        "example": "needs_action",
                        "name": "Set status",
                        "selector": {
                            "select": {
                                "options": [
                                    "needs_action",
                                    "completed"
                                ],
                                "translation_key": "status"
                            }
                        }
                    }
                },
                "name": "Update to-do list item",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "todo"
                            ],
                            "supported_features": [
                                4
                            ]
                        }
                    ]
                }
            }
        },
        "tts": {
            "clear_cache": {
                "description": "Removes all cached text-to-speech files and purges the memory.",
                "fields": {},
                "name": "Clear TTS cache"
            },
            "demo_say": {
                "description": "Say something using text-to-speech on a media player with demo.",
                "fields": {
                    "cache": {
                        "default": false,
                        "selector": {
                            "boolean": null
                        }
                    },
                    "entity_id": {
                        "required": true,
                        "selector": {
                            "entity": {
                                "domain": "media_player"
                            }
                        }
                    },
                    "language": {
                        "example": "ru",
                        "selector": {
                            "text": null
                        }
                    },
                    "message": {
                        "example": "My name is hanna",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    },
                    "options": {
                        "advanced": true,
                        "example": "platform specific",
                        "selector": {
                            "object": null
                        }
                    }
                },
                "name": "Say a TTS message with demo"
            },
            "speak": {
                "description": "Speaks something using text-to-speech on a media player.",
                "fields": {
                    "cache": {
                        "default": true,
                        "description": "Stores this message locally so that when the text is requested again, the output can be produced more quickly.",
                        "name": "Cache",
                        "selector": {
                            "boolean": null
                        }
                    },
                    "language": {
                        "description": "Language to use for speech generation.",
                        "example": "ru",
                        "name": "Language",
                        "selector": {
                            "text": null
                        }
                    },
                    "media_player_entity_id": {
                        "description": "Media players to play the message.",
                        "name": "Media player entity",
                        "required": true,
                        "selector": {
                            "entity": {
                                "domain": "media_player"
                            }
                        }
                    },
                    "message": {
                        "description": "The text you want to convert into speech so that you can listen to it on your device.",
                        "example": "My name is hanna",
                        "name": "Message",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    },
                    "options": {
                        "advanced": true,
                        "description": "A dictionary containing integration-specific options.",
                        "example": "platform specific",
                        "name": "Options",
                        "selector": {
                            "object": null
                        }
                    }
                },
                "name": "Speak",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "tts"
                            ]
                        }
                    ]
                }
            }
        },
        "update": {
            "clear_skipped": {
                "description": "Removes the skipped version marker from an update.",
                "fields": {},
                "name": "Clear skipped update",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "update"
                            ]
                        }
                    ]
                }
            },
            "install": {
                "description": "Installs an update for this device or service.",
                "fields": {
                    "backup": {
                        "description": "If supported by the integration, this creates a backup before starting the update .",
                        "name": "Backup",
                        "required": false,
                        "selector": {
                            "boolean": null
                        }
                    },
                    "version": {
                        "description": "The version to install. If omitted, the latest version will be installed.",
                        "example": "1.0.0",
                        "name": "Version",
                        "required": false,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Install update",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "update"
                            ]
                        }
                    ]
                }
            },
            "skip": {
                "description": "Marks currently available update as skipped.",
                "fields": {},
                "name": "Skip update",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "update"
                            ]
                        }
                    ]
                }
            }
        },
        "vacuum": {
            "clean_spot": {
                "description": "Tells the vacuum cleaner to do a spot clean-up.",
                "fields": {},
                "name": "Clean spot",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "vacuum"
                            ]
                        }
                    ]
                }
            },
            "locate": {
                "description": "Locates the vacuum cleaner robot.",
                "fields": {},
                "name": "Locate",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "vacuum"
                            ],
                            "supported_features": [
                                512
                            ]
                        }
                    ]
                }
            },
            "pause": {
                "description": "Pauses the cleaning task.",
                "fields": {},
                "name": "Pause",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "vacuum"
                            ],
                            "supported_features": [
                                4
                            ]
                        }
                    ]
                }
            },
            "return_to_base": {
                "description": "Tells the vacuum cleaner to return to its dock.",
                "fields": {},
                "name": "Return to dock",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "vacuum"
                            ],
                            "supported_features": [
                                16
                            ]
                        }
                    ]
                }
            },
            "send_command": {
                "description": "Sends a command to the vacuum cleaner.",
                "fields": {
                    "command": {
                        "description": "Command to execute. The commands are integration-specific.",
                        "example": "set_dnd_timer",
                        "name": "Command",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    },
                    "params": {
                        "description": "Parameters for the command. The parameters are integration-specific.",
                        "example": "{ \"key\": \"value\" }",
                        "name": "Parameters",
                        "selector": {
                            "object": null
                        }
                    }
                },
                "name": "Send command",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "vacuum"
                            ]
                        }
                    ]
                }
            },
            "set_fan_speed": {
                "description": "Sets the fan speed of the vacuum cleaner.",
                "fields": {
                    "fan_speed": {
                        "description": "Fan speed. The value depends on the integration. Some integrations have speed steps, like 'medium'. Some use a percentage, between 0 and 100.",
                        "example": "low",
                        "name": "Fan speed",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Set fan speed",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "vacuum"
                            ]
                        }
                    ]
                }
            },
            "start": {
                "description": "Starts or resumes the cleaning task.",
                "fields": {},
                "name": "Start",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "vacuum"
                            ],
                            "supported_features": [
                                8192
                            ]
                        }
                    ]
                }
            },
            "start_pause": {
                "description": "Starts, pauses, or resumes the cleaning task.",
                "fields": {},
                "name": "Start/pause",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "vacuum"
                            ],
                            "supported_features": [
                                4
                            ]
                        }
                    ]
                }
            },
            "stop": {
                "description": "Stops the current cleaning task.",
                "fields": {},
                "name": "Stop",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "vacuum"
                            ],
                            "supported_features": [
                                8
                            ]
                        }
                    ]
                }
            },
            "toggle": {
                "description": "Toggles the vacuum cleaner on/off.",
                "fields": {},
                "name": "Toggle",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "vacuum"
                            ],
                            "supported_features": [
                                2,
                                1
                            ]
                        }
                    ]
                }
            },
            "turn_off": {
                "description": "Stops the current cleaning task and returns to its dock.",
                "fields": {},
                "name": "Turn off",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "vacuum"
                            ],
                            "supported_features": [
                                2
                            ]
                        }
                    ]
                }
            },
            "turn_on": {
                "description": "Starts a new cleaning task.",
                "fields": {},
                "name": "Turn on",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "vacuum"
                            ],
                            "supported_features": [
                                1
                            ]
                        }
                    ]
                }
            }
        },
        "water_heater": {
            "set_away_mode": {
                "description": "Turns away mode on/off.",
                "fields": {
                    "away_mode": {
                        "description": "New value of away mode.",
                        "name": "Away mode",
                        "required": true,
                        "selector": {
                            "boolean": null
                        }
                    }
                },
                "name": "Set away mode",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "water_heater"
                            ]
                        }
                    ]
                }
            },
            "set_operation_mode": {
                "description": "Sets the operation mode.",
                "fields": {
                    "operation_mode": {
                        "description": "New value of the operation mode. For a list of possible modes, refer to the integration documentation.",
                        "example": "eco",
                        "name": "Operation mode",
                        "required": true,
                        "selector": {
                            "text": null
                        }
                    }
                },
                "name": "Set operation mode",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "water_heater"
                            ]
                        }
                    ]
                }
            },
            "set_temperature": {
                "description": "Sets the target temperature.",
                "fields": {
                    "operation_mode": {
                        "description": "New value of the operation mode. For a list of possible modes, refer to the integration documentation.",
                        "example": "eco",
                        "name": "Operation mode",
                        "selector": {
                            "text": null
                        }
                    },
                    "temperature": {
                        "description": "New target temperature for the water heater.",
                        "name": "Temperature",
                        "required": true,
                        "selector": {
                            "number": {
                                "max": 100,
                                "min": 0,
                                "step": 0.5,
                                "unit_of_measurement": "°"
                            }
                        }
                    }
                },
                "name": "Set temperature",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "water_heater"
                            ]
                        }
                    ]
                }
            },
            "turn_off": {
                "description": "Turns water heater off.",
                "fields": {},
                "name": "Turn off",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "water_heater"
                            ]
                        }
                    ]
                }
            },
            "turn_on": {
                "description": "Turns water heater on.",
                "fields": {},
                "name": "Turn on",
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "water_heater"
                            ]
                        }
                    ]
                }
            }
        },
        "weather": {
            "get_forecast": {
                "description": "Get weather forecast.",
                "fields": {
                    "type": {
                        "description": "Forecast type: daily, hourly or twice daily.",
                        "name": "Forecast type",
                        "required": true,
                        "selector": {
                            "select": {
                                "options": [
                                    "daily",
                                    "hourly",
                                    "twice_daily"
                                ],
                                "translation_key": "forecast_type"
                            }
                        }
                    }
                },
                "name": "Get forecast",
                "response": {
                    "optional": false
                },
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "weather"
                            ],
                            "supported_features": [
                                1,
                                2,
                                4
                            ]
                        }
                    ]
                }
            },
            "get_forecasts": {
                "description": "Get weather forecasts.",
                "fields": {
                    "type": {
                        "description": "Forecast type: daily, hourly or twice daily.",
                        "name": "Forecast type",
                        "required": true,
                        "selector": {
                            "select": {
                                "options": [
                                    "daily",
                                    "hourly",
                                    "twice_daily"
                                ],
                                "translation_key": "forecast_type"
                            }
                        }
                    }
                },
                "name": "Get forecasts",
                "response": {
                    "optional": false
                },
                "target": {
                    "entity": [
                        {
                            "domain": [
                                "weather"
                            ],
                            "supported_features": [
                                1,
                                2,
                                4
                            ]
                        }
                    ]
                }
            }
        },
        "zone": {
            "reload": {
                "description": "Reloads zones from the YAML-configuration.",
                "fields": {},
                "name": "Reload"
            }
        }
    },
    "success": true,
    "type": "result"
}